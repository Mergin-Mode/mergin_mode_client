{"version":3,"sources":["helpers/ThemeliodiProblimata.js","helpers/computeZ.js","helpers/createWorld.js","helpers/CalculateDeltaPosition.js","layout/ActionButton.js","layout/Modal.js","App.js","serviceWorker.js","index.js"],"names":["ThemeliodesProblima_1","Xa","Ya","Sab","Gab","Xb","Math","sin","Yb","cos","calculateSab","absDX","abs","absDY","sqrt","pow","Number","toFixed","posZ","positionX","positionY","dem","length","axeZ","heightX","heightY","FHeight1","FHeight2","dXZ","dYZ","ipotinousaX","ipotinousaY","restX_new","restY_new","IpotinousaDiagwniou1","IpotinousaDiagwniou2","minIpotinousaX","minIpotinousaY","slopeX","slopeY","finalDXZ","finalDYZ","percent","restX","restY","axeX","axeY","intX","intY","floor","atan","PI","createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","mixer","setModelRuntimeInfo","showCoords","FBXLoader","GLTFLoader","clock","THREE","host","document","getElementById","video","getElementsByTagName","texture","minFilter","magFilter","format","background","antialias","alpha","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","clientWidth","clientHeight","appendChild","domElement","position","set","DeviceOrientationControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","rotateSpeed","panSpeed","zoomSpeed","geometry","g","pos","getAttribute","pa","array","j","i","needsUpdate","computeVertexNormals","generateTerrain","material","wireframe","color","side","flatShading","plane","castShadow","receiveShadow","rotateX","add","gridHelper","light","hemiLight","setHSL","groundColor","dirLight","multiplyScalar","name","sky","opacity","transparent","alphaTest","onWindowResize","aspect","updateProjectionMatrix","rotation","animate","setTimeout","requestAnimationFrame","mergin_mode","visible","update","delta","getDelta","mixers","modelLayer","forEach","md","model","mesh","children","x","y","z","runtimeInfo","animating","activeRow","activeRowData","vectors","data","filter","v","id","vectorId","xStart","yStart","Za","posXY","newZ","CalculateDeltaPosition","newX","newY","newSab","Infinity","newActiveRow","axisZ","rotateOnWorldAxis","render","addEventListener","prototype","load2","files","callback","scope","this","file","reader","FileReader","onload","event","target","readyState","status","parse","result","responseText","readAsArrayBuffer","props","classes","makeStyles","theme","root","height","transform","flexGrow","zIndex","width","speedDial","bottom","spacing","right","useStyles","React","useState","open","setOpen","handleClose","className","Backdrop","SpeedDial","ariaLabel","icon","SpeedDialIcon","onClose","onOpen","actions","map","action","SpeedDialAction","key","tooltipTitle","tooltipOpen","onClick","rand","round","random","getModalStyle","top","left","maxWidth","paper","backgroundColor","palette","border","boxShadow","shadows","padding","modalStyle","body","style","Modal","aria-labelledby","aria-describedby","createMuiTheme","primary","main","secondary","towerlocationConvert","fromLonLat","treelocationConvert","towerlocation","treelocation","App","latitude","longitude","setPosition","setAction","modalData","setModalData","mainRef","useRef","appRef","useEffect","navigator","geolocation","getCurrentPosition","mediaDevices","getUserMedia","coords","current","facingMode","then","response","srcObject","play","newWorld","url","size","load","object","traverse","child","isMesh","scale","loadFBXModel","resolve","loader","dracoLoader","DRACOLoader","setDRACOLoader","gltf","loadGLTFModel","check","display","ThemeProvider","ref","elem","src","autoPlay","playsInline","ActionButton","fullscreenElement","exitFullscreen","requestFullscreen","catch","err","message","delay","onError","console","error","onScan","d","JSON","alphaOffset","heading","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"+RAEaA,EAAwB,SAACC,EAAGC,EAAGC,EAAIC,GAG/C,MAAO,CAACC,GAFGJ,EAAKE,EAAIG,KAAKC,IAAIH,EAHf,kBAKEI,GADLN,EAAKC,EAAIG,KAAKG,IAAIL,EAJf,oBAQFM,EAAe,SAACT,EAAGC,EAAGG,EAAGG,GACrC,IAAMG,EAAOL,KAAKM,IAAIP,EAAGJ,GACnBY,EAAQP,KAAKM,IAAIJ,EAAGN,GACpBC,EAAMG,KAAKQ,KAAMR,KAAKS,IAAIJ,EAAM,GAAKL,KAAKS,IAAIF,EAAM,IAC1D,OAAOG,OAAOb,EAAIc,QAAQ,KCDdC,EAAK,SAACC,EAAUC,EAAUC,GACtC,GAAmB,IAAfA,EAAIC,OACP,OAAO,EAER,IAAIC,EACJC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EASA,GAPCH,GAAMnC,EAAa,EAAES,EAAU,GA3CpB,KAIA,IAAI,KAuCgCF,QAAQ,GAAK,EAC5D6B,GAAMpC,EAAa,EAAEU,EAAU,EAzCpB,KAEA,IAAI,KAuCgCH,QAAQ,GAAK,EAC5D8B,EAAKzC,KAAK2C,MAAMJ,GAGfD,EAAME,GAFPE,EAAK1C,KAAK2C,MAAMH,IAIJ,KAHXH,EAAME,EAAKE,IAGe,IAAVH,EAEjB,OADCrB,EA3Cc,IA2CPyB,EAAgBD,EACjB/B,OAAOK,EAAIE,GAAM,GAAGN,QAAQ,IAEpC,GAAI0B,GAAO,EAAEC,EAAM,CAKlB,IAAKvB,EAFJE,EAjDc,IAiDPyB,EAAgBD,KAEL1B,EAAIE,EAAO,GAAI,OAAO,EAqBzC,GApBEK,EAAIP,EAAIE,GAAM,GAAKF,EAAIE,EAAK,GAAG,GAC/BO,EAAaxB,KAAKQ,KAAKR,KAAKS,IAAKa,EAvDtB,IACA,EAsD2C,GAAGtB,KAAKS,IAzDrD,IAAI,GAyD4D,IAEzEiB,EAAUW,EAAMC,EAChBT,EAAqB7B,KAAKQ,KAAKR,KAAKS,IAAI6B,GA3D/B,IAAI,IA2DwC,GAAGtC,KAAKS,IAAI6B,GA5DxD,IAAI,IA4DiE,IAE9ER,EAAiBN,EAAYE,EAC7BM,EAAShC,KAAK4C,KAAM5C,KAAKM,KAAKgB,EA7DnB,IACA,IAHF,IAAI,MAmEbY,EAAUJ,EAFF9B,KAAKC,IAAI+B,GAIhBd,EADCI,EAAI,EACMP,EAAIE,GAAM,GAnEX,IACA,EAkE+BiB,EAG9BnB,EAAIE,GAAM,GAtEX,IACA,EAqE+BiB,GAIvCnB,EAAIE,KAAUF,EAAIE,EAxER,KAwE0B,OAAO,EAC9CM,EAAKR,EAAIE,GAAM,GAAKF,EAAIE,EAzEX,KAyE0B,GACvCQ,EAAazB,KAAKQ,KAAKR,KAAKS,IAAKc,EA5EtB,IACA,EA2E2C,GAAGvB,KAAKS,IA7ErD,IAAI,GA6E4D,IAEzEkB,EAAUW,EAAMD,EAChBT,EAAqB5B,KAAKQ,KAAKR,KAAKS,IAAI4B,GAjF/B,IAAI,IAiFwC,GAAGrC,KAAKS,IAAI4B,GAhFxD,IAAI,IAgFiE,IAE9EN,EAAiBN,EAAYE,EAE7BM,EAASjC,KAAK4C,KAAM5C,KAAKM,KAAKiB,EAnFnB,IACA,IAFF,IAAI,MAwFbY,EAAWJ,EAFH/B,KAAKC,IAAIgC,GAIhBd,EADCI,EAAI,EACMR,EAAIE,GAAM,GAzFX,IACA,EAwF+BkB,EAG9BpB,EAAIE,GAAM,GA5FX,IACA,EA2F+BkB,EAG1CC,EAAQP,GAAsBD,EAAqBC,GACnDT,EAASpB,KAAKM,IAAIY,EAAQC,GAASiB,EAElCf,EADEH,EAAQC,EAAS,EACVD,EAAQE,EAGRF,EAAQE,MAGjB,CAIH,IAAKL,EAFJE,EAxGc,KAwGPyB,EAAK,GAAaD,EAAK,KAEZ1B,EAAIE,EAAK,GAAI,OAAO,EAmBvC,GAlBEK,EAAKP,EAAIE,GAAM,GAAKF,EAAIE,EAAK,GAAG,GAChCO,EAAaxB,KAAKQ,KAAKR,KAAKS,IAAKa,EA9GtB,IACA,EA6G2C,GAAGtB,KAAKS,IAhHrD,IAAI,GAgH4D,IAEzEiB,EAAW,EAAEW,GAAQ,EAAEC,GACvBT,EAAqB7B,KAAKQ,KAAKR,KAAKS,IAlH3B,IAAI,IAkH4B,EAAE6B,GAAc,GAAGtC,KAAKS,IAnHxD,IAAI,IAmHyD,EAAE6B,GAAc,IAEtFR,EAAiBN,EAAaE,EAC9BM,EAAShC,KAAK4C,KAAM5C,KAAKM,KAAKgB,EApHnB,IACA,IAHF,IAAI,MAyHbY,EAAUJ,EADF9B,KAAKC,IAAI+B,GAGhBd,EADCI,EAAI,EACMP,EAAIE,GAAM,GAzHX,IACA,EAwH+BiB,EAG9BnB,EAAIE,GAAM,GA5HX,IACA,EA2H+BiB,GAGvCnB,EAAIE,KAAUF,EAAIE,EA7HR,KA6HwB,OAAO,EAC5CM,EAAKR,EAAIE,GAAM,GAAKF,EAAIE,EA9HX,KA8H0B,GACvCQ,EAAazB,KAAKQ,KAAKR,KAAKS,IAAKc,EAjItB,IACA,EAgI2C,GAAGvB,KAAKS,IAlIrD,IAAI,GAkI4D,IAEzEkB,EAAW,EAAEW,GAAQ,EAAED,GACvBT,EAAqB5B,KAAKQ,KAAKR,KAAKS,IAtI3B,IAAI,IAsI4B,EAAE4B,GAAc,GAAGrC,KAAKS,IArIxD,IAAI,IAqIyD,EAAE4B,GAAc,IAEtFN,EAAiBN,EAAaE,EAE9BM,EAASjC,KAAK4C,KAAM5C,KAAKM,KAAKiB,EAxInB,IACA,IAFF,IAAI,MA6IbY,EAAUJ,EAFF/B,KAAKC,IAAIgC,GAIhBd,EADCI,EAAI,EACMR,EAAIE,GAAM,GA9IX,IACA,EA6I+BkB,EAG9BpB,EAAIE,GAAM,GAjJX,IACA,EAgJ+BkB,EAE1CC,EAAQP,GAAsBD,EAAqBC,GACnDT,EAASpB,KAAKM,IAAIY,EAAQC,GAASiB,EAElCf,EADEH,EAAQC,EAAS,EACVD,EAAQE,EAGRF,EAAQE,EAKrB,OAAOV,OAAOW,EAASV,QAAQ,KC5JjBX,KAAK6C,GA+CL,SAASC,EAAYC,EAAOC,EAASC,EAAMC,EAASC,EAAQC,EAASC,EAAQC,EAAmBC,EAAMC,EAAoBC,GACnIJ,EAAQK,UAAYA,IACrBL,EAAQM,WAAaA,IACrB,IAAIC,EAAQ,IAAIC,IAIPC,EAAOC,SAASC,eAAe,aA0BrCf,EAAQ,IAAIY,KAEZ,IAAMI,EAAQF,SAASG,qBAAsB,SAAU,GACnDC,EAAU,IAAIN,KAAoBI,GAClCE,EAAQC,UAAYP,IACpBM,EAAQE,UAAYR,IACpBM,EAAQG,OAAST,KACrBZ,EAAMsB,WAAaJ,GAGnBjB,EAAW,IAAIW,KAAqB,CAAEW,WAAW,EAAKC,OAAM,KACnDC,cAAeC,OAAOC,kBAC/B1B,EAAS2B,cAAe,EAAU,GAClC3B,EAAS4B,QAAShB,EAAKiB,YAAajB,EAAKkB,cAOzClB,EAAKmB,YAAa/B,EAASgC,aAE3BnC,EAAS,IAAIc,IAAyB,GAAIC,EAAKiB,YAAcjB,EAAKkB,aAAc,EAAG,MAE5EG,SAASC,IAAK,GAAG,GAAG,KAM3BpC,EAAW,IAAIqC,IAA2BtC,IAEjCuC,eAAgB,EACzBtC,EAASuC,cAAgB,IACzBvC,EAASwC,oBAAqB,EAC9BxC,EAASyC,YAAc,EACvBzC,EAAS0C,YAAc,IAEvB1C,EAAS2C,YAAc,GACvB3C,EAAS4C,SAAW,GACpB5C,EAAS6C,UAAY,GAqBrB,IAAIC,EAAW,IAAIjC,IAA2B,IAAK,IAAK,GAAI,KAjFpC,SAACkC,GAYvB,IAXA,IAAMC,EAAMD,EAAEE,aAAa,YACrBC,EAAKF,EAAIG,MAUNC,EAAI,EAAEC,EAAE,EAAGD,EAAIF,EAAGlF,OAAQoF,GAAG,EAAEC,IACpCH,EAAGE,GAAK,EAEZJ,EAAIM,aAAc,EAClBP,EAAEQ,uBAmEJC,CAAgBV,GAEhB,IAAIW,EAAW,IAAI5C,IAAyB,CAAC6C,WAAU,EAAMC,MAAO,OAAQC,KAAM/C,MAElF4C,EAASI,aAAc,EAEvB,IAAMC,EAAQ,IAAIjD,IAAYiC,EAAUW,GACxCK,EAAM3B,SAASC,IAAK,EAAG,EAAG,GAE1B0B,EAAMC,YAAa,EACnBD,EAAME,eAAgB,EACtBF,EAAMhB,SAASmB,QAASjH,KAAK6C,GAAK,GAOlCI,EAAMiE,IAAKJ,GAEX,IAAIK,EAAa,IAAItD,IAAkB,IAAO,KAE9CZ,EAAMiE,IAAKC,GAuCX,IAAIC,EAAQ,IAAIvD,IAAoB,QAAS,GAC7CZ,EAAMiE,IAAKE,GAGV,IAAIC,EAAY,IAAIxD,IAAuB,SAAU,SAAU,GAC5DwD,EAAUV,MAAMW,OAAQ,GAAM,GAAI,KAClCD,EAAUE,YAAYD,OAAQ,KAAO,GAAK,IAC1CD,EAAUlC,SAASC,IAAK,EAAG,EAAE,IAC7BnC,EAAMiE,IAAKG,GAEX,IAAIG,EAAW,IAAI3D,IAAwB,SAAU,GACrDc,OAAO6C,SAAWA,EAClBA,EAASrC,SAASC,IAAK,GAAK,EAAG,GAC/BoC,EAASrC,SAASsC,eAAgB,IAClCD,EAASE,KAAO,WAGhBzE,EAAMiE,IAAKM,GAEXA,EAAST,YAAa,EAoE1B5D,EAAU,IAAIU,IAAY,IAAIA,KAAsB,GAAI,GAAI,IAAM,IAAIA,IAAyB,CAAC8C,MAAO,SAOvG,IAAMgB,EAAM,IAAI9D,IAAY,IAAIA,KAAsB,IAAK,GAAI,IAAM,IAAIA,IAAwB,CAAC+D,QAAS,EACzGC,aAAa,EACbC,UAAW,IACXlB,KAAM/C,OAqDV,SAASkE,IACPhF,EAAOiF,OAASlE,EAAKiB,YAAcjB,EAAKkB,aACxCjC,EAAOkF,yBAEP/E,EAAS4B,QAAShB,EAAKiB,YAAajB,EAAKkB,cAgF3C,OAvIE2C,EAAIO,SAAS9C,IAAIpF,KAAK6C,GAAG,EAAE,EAAE,GAC7BI,EAAMiE,IAAIS,GAyDZ,SAASQ,IACHC,YAAY,WAAY,IAAD,EACnBC,sBAAuBF,IACkB,KAAtC,UAAAxD,OAAO2D,YAAYrF,aAAnB,eAA0BsF,WACzBvF,EAASwF,SAOvB,WAGE,IAFA,IAAIC,EAAQ7E,EAAM8E,WAERrC,EAAI,EAAGA,EAAI1B,OAAO2D,YAAYK,OAAO3H,SAAWqF,EAExD1B,OAAO2D,YAAYK,OAAQtC,GAAImC,OAAQC,GAGzC9D,OAAO2D,YAAYM,WAAWC,SAAQ,SAAAC,GACpC,IAAMC,EAAK,2BAAOD,GAAP,IAAUE,KAAKF,EAAGE,KAAKC,SAAS,KADD,EAE1BF,EAAMC,KAAK7D,SAApB+D,EAFmC,EAEnCA,EAAEC,EAFiC,EAEjCA,EAAEC,EAF+B,EAE/BA,EAF+B,EAGZL,EAAMM,YAA7BC,EAHmC,EAGnCA,UAAUC,EAHyB,EAGzBA,UACXC,EAAgB7E,OAAO2D,YAAYmB,QAAQC,KAAKC,QAAO,SAAAC,GAAC,OAAEA,EAAEC,KAAOd,EAAMe,YAAU,GAAG3D,MAAM,GAAGoD,GAC/FQ,EAASP,EAAc,GACvBQ,EAASR,EAAc,GAEvB1J,EAAM0J,EAAc,GACpB3J,EAAM2J,EAAc,GAC1B,GACEF,GACa,qBAANJ,GACM,qBAANC,GACM,qBAANC,EACL,CACF,IAAMrI,EAAK4D,OAAO2D,YAAYxB,MAAM/F,IADlC,ECjZwB,SAACpB,EAAGC,EAAGqK,EAAGnK,EAAI2I,EAAM1H,GACzD,IACImJ,EAAQxK,EAAsBC,EAAGC,EADnB,KAAN6I,EACgC3I,GACtCqK,EAAMvJ,EAAKsJ,EAAMnK,GAAGmK,EAAMhK,GAAGa,GAYnC,MAAO,CAACmI,EAAEgB,EAAMnK,GAAKoJ,EAAEe,EAAMhK,GAAKkJ,EAAEe,GDoYMC,CAAuB1J,OAAOwI,EAAEvI,QAAQ,IAAID,OAAOyI,EAAExI,QAAQ,IAAID,OAAO0I,EAAEzI,QAAQ,IAAIb,EAAI2I,EAAM1H,GAAtHsJ,EAFP,EAEKnB,EAASoB,EAFd,EAEYnB,EAASgB,EAFrB,EAEmBf,EACjBmB,EAASnK,EAAa2J,EAAOC,EAAOd,EAAEC,GAI1C,GAHGoB,IAAWC,MACZD,EAAS,GAERA,EAAS1K,EACVkJ,EAAMC,KAAK7D,SAASC,IAAIiF,EAAKC,EAAKH,OAC7B,CACL,IAAMM,EAAe9F,OAAO2D,YAAYmB,QAAQC,KAAKC,QAAO,SAAAC,GAAC,OAAEA,EAAEC,KAAOd,EAAMe,YAAU,GAAG3D,MAAM,GAAGoD,EAAY,GAChH,GAAIkB,EAKG,CAEHjH,EAAoBuF,EAAMc,GAAG,CAACP,WAAU,EAAKC,UAAUA,EAAY,IAKnE,IAAMmB,EAAQ,IAAI7G,KAAc,EAAG,EAAG,GAGtCkF,EAAMC,KAAK2B,kBAAkBD,IAAU,IAAMlB,EAAc,GAAKiB,EAAa,IAAI,uBAXjFjH,EAAoBuF,EAAMc,GAAG,CAACP,WAAU,EAAMC,UAAU,SAkBlErG,EAAS0H,OAAQ3H,EAAOF,GA9DZ6H,MAEL,IAgETzC,GAEAxD,OAAOkG,iBAAkB,SAAU9C,GAAgB,GAI5C,CAACjB,QAAM/D,SAAOC,WAASC,QAAMC,WAASC,UAAQC,SAD1C,CAAC0D,QAAM3D,UAAQwE,MAAIR,cACgC9D,UAAQ0E,kBApb5EpE,IAAWmH,UAAUC,MAAQ,SAASC,EAAOC,GACzC,IAAIC,EAAQC,KACRC,EAAOJ,EAAM,GAEbK,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAASC,GACW,IAA5BA,EAAMC,OAAOC,YAA4C,IAAxBF,EAAMC,OAAOE,QAC9CT,EAAMU,MAAMJ,EAAMC,OAAOI,QAAUL,EAAMC,OAAOK,aAAa,GAAGb,IAUxEI,EAAOU,kBAAkBX,IAG7B1H,IAAUoH,UAAUC,MAAQ,SAASC,EAAOC,GACxC,IAAIC,EAAQC,KACRC,EAAOJ,EAAM,GAEbK,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAASC,GACrB,GAAgC,IAA5BA,EAAMC,OAAOC,YAA4C,IAAxBF,EAAMC,OAAOE,OAAc,CAC5D,IAAI7F,EAAWoF,EAAMU,MAAMJ,EAAMC,OAAOI,QAAUL,EAAMC,OAAOK,cAE3Db,GACAA,EAASnF,KASrBuF,EAAOU,kBAAkBX,I,yEE3Cd,WAACY,GACd,IAkBMC,EAlBYC,aAAW,SAACC,GAAD,MAAY,CACzCC,KAAK,aACHC,OAAQ,IACRC,UAAW,kBACXC,SAAU,EACVpH,SAAU,WACVqH,OAAQ,GACRC,MAAO,QANL,SAOM,QAEVC,UAAW,CACTvH,SAAU,WACVwH,OAAQR,EAAMS,QAAQ,GACtBC,MAAOV,EAAMS,QAAQ,OAKPE,GAnBQ,EAoBAC,IAAMC,UAAS,GApBf,mBAoBjBC,EApBiB,KAoBXC,EApBW,KA4BlBC,EAAc,WAClBD,GAAQ,IAGV,OACE,yBAAKE,UAAWnB,EAAQG,MACtB,kBAACiB,EAAA,EAAD,CAAUJ,KAAMA,IAChB,kBAACK,EAAA,EAAD,CACEC,UAAU,iBACVH,UAAWnB,EAAQS,UACnBc,KAAM,kBAACC,EAAA,EAAD,MACNC,QAASP,EACTQ,OAhBa,WACjBT,GAAQ,IAgBJD,KAAMA,GAELjB,EAAM4B,QAAQC,KAAI,SAACC,GAAD,OACjB,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAOpG,KACZ8F,KAAMM,EAAON,KACbS,aAAcH,EAAOpG,KACrBwG,aAAW,EACXC,QAAShB,U,SCtDrB,SAASiB,IACP,OAAOpO,KAAKqO,MAAsB,GAAhBrO,KAAKsO,UAAiB,GAG1C,SAASC,IACP,IAAMC,EAAM,GAAKJ,IACXK,EAAO,GAAKL,IAElB,MAAO,CACLM,SAAS,MACTjC,MAAM,MACN+B,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJnC,UAAU,cAAD,OAAgBkC,EAAhB,eAA0BC,EAA1B,OAIb,IAAM3B,EAAYZ,aAAW,SAACC,GAAD,MAAY,CACvCwC,MAAO,CACLxJ,SAAU,WACVsH,MAAO,IACPmC,gBAAiBzC,EAAM0C,QAAQtK,WAAWoK,MAC1CG,OAAQ,iBACRC,UAAW5C,EAAM6C,QAAQ,GACzBC,QAAS9C,EAAMS,QAAQ,EAAG,EAAG,QAIlB,WAACZ,GACd,IAAMC,EAAUa,IADO,EAGFC,IAAMC,SAASuB,GAA7BW,EAHgB,sBAICnC,IAAMC,UAAS,GAJhB,mBAUjBmC,GAViB,UAWrB,yBAAKC,MAAOF,EAAY9B,UAAWnB,EAAQ0C,OACzC,wBAAI9E,GAAG,sBAAP,mBACA,uBAAGA,GAAG,4BACHmC,EAAMtC,QAKb,OACI,kBAAC2F,EAAA,EAAD,CACEpC,MAAM,EACNS,QAAS1B,EAAM0B,QACf4B,kBAAgB,qBAChBC,mBAAiB,4BAEhBJ,I,oFClCHhD,EAAQqD,YAAe,CAC3BX,QAAS,CACPY,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAKNE,EAAuBC,YAAW,CAAC,UAAW,UAAU,QACxDC,EAAsBD,YAAW,CAAC,SAAW,UAAU,QAEvDE,GADcF,YAAW,CAAC,UAAW,UAAU,QAC/B,CAACD,EAAqB,GAAGA,EAAqB,GAAGA,EAAqB,KACtFI,EAAe,CAACF,EAAoB,GAAGA,EAAoB,GAAGA,EAAoB,IAExFnL,OAAO2D,YAAc,CACnBM,WAAY,GACZa,QAAQ,GACR3C,MAAM,GACNa,IAAI,GACJgB,OAAO,GACP5F,OAAO,GACPC,SAAS,GACTC,MAAM,GACNC,SAAS,GACTC,QAAQ,GACRC,SAAS,GACTC,QAAQ,GACR0E,eAAe,cAwKFkI,MArKf,WAAgB,IAAD,EAEkBjD,mBAAS,CAACkD,SAAS,EAAEC,UAAU,IAFjD,mBAENhL,EAFM,KAEGiL,EAFH,OAGcpD,mBAAS,WAHvB,mBAGNc,EAHM,KAGCuC,EAHD,OAIoBrD,mBAAS,MAJ7B,mBAINsD,EAJM,KAIIC,EAJJ,KAKPC,EAAUC,iBAAO,MACjBC,EAASD,iBAAO,MAChBzK,EAAMyK,iBAAOtL,GAyHnB,OAxHkBsL,iBAAO,IAoFzBE,qBAAU,WAAK,IAAD,IACZ,KAAG,UAACC,UAAUC,mBAAX,aAAC,EAAuBC,uBAAsB,UAACF,UAAUG,oBAAX,aAAC,EAAwBC,cACxE,OAAO,EAITJ,UAAUC,YAAYC,oBAAmB,SAAiB3L,GACtD,IAAM+K,EAAY/K,EAAS8L,OAAOf,SAC5BC,EAAYhL,EAAS8L,OAAOd,UAClCnK,EAAIkL,QAAU,CAAChB,WAASC,aACxBC,EAAYpK,EAAIkL,YACjB,eAEHN,UAAUG,aAAaC,aATH,CAAE/M,MAAO,CAAEwI,MAAO,KAAMJ,OAAQ,IAAK8E,WAAY,iBASpBC,MAAK,SAAAC,GAElD,IAAMpN,EAAQF,SAASC,eAAe,SACtCC,EAAMqN,UAAYD,EAClBpN,EAAMsN,UAjBE,MAoB2D5M,OAAO2D,YAAlEvF,GApBA,EAoBP4F,OApBO,EAoBA5F,QAAOC,EApBP,EAoBOA,SAASC,EApBhB,EAoBgBA,MAAMC,EApBtB,EAoBsBA,SAASC,EApB/B,EAoB+BA,QAAiBE,GApBhD,EAoBuCD,SApBvC,EAoBgDC,SAEtDmO,GADoBzN,SAASC,eAAe,aACjClB,EAAYC,EAAOC,EAASC,EAAMC,EAASC,EAAQC,EAASC,IAC7EsB,OAAO2D,YAAP,2BAAyB3D,OAAO2D,aAAekJ,GA3D3B,SAACpG,GAAU,IAAD,EACNA,EAAK,GAAZqG,GADa,EACvB/J,KADuB,EAClBgK,KADkB,EACbD,KADa,EAEN9M,OAAO2D,YAFD,EAEvBrF,OACQ,IAHe,EAEjBI,QACcK,WAClBiO,KAAKF,GAAK,SAAAG,GAAW,IAAD,EAOzBA,EAAOC,UAAU,SAAAC,GACVA,EAAMC,SACTD,EAAM/K,YAAa,EACnB+K,EAAM9K,eAAgB,MAG1B4K,EAAOI,MAAM5M,IAAI,GAAI,GAAI,KACzB,EAAAwM,EAAOzM,UAASC,IAAhB,QAAuB4K,MA2C3BiC,CAAa,CAAC,CAACR,IAA6B,qBAjGvB,SAACrG,EAAK8G,GAAa,IAAD,EACf9G,EAAK,GAAZqG,GADsB,EAChC/J,KADgC,EAC3BgK,KAD2B,EACtBD,KADsB,EAEf9M,OAAO2D,YAAxBrF,EAFgC,EAEhCA,MAEDkP,EAAS,IAJwB,EAE1B9O,QAEcM,WACvByO,EAAc,IAAIC,IACtBF,EAAOG,eAAgBF,GACrBD,EAAOR,KAAKF,GAAK,SAAAc,GAAS,IAAD,KAiBvB,EAAAA,EAAKtP,MAAMkC,UAASC,IAApB,QAA2B2K,IAC3B,EAAApL,OAAO2D,YAAYxB,MAAM3B,UAASC,IAAlC,QAAyC2K,GACzC9M,EAAMiE,IAAIqL,EAAKtP,UAwEnBuP,CAAc,CAAC,CAACf,IAA6B,yBAC7C,IAEFd,qBAAU,WACR,IAAM8B,EAAmB,YAAX3E,EACdnJ,OAAO2D,YAAYrF,MAAMsF,QAAUkK,EACnC9N,OAAO2D,YAAYrF,MAAMqD,aAAc,EACvCkK,EAAQU,QAAQ9B,MAAMsD,QAAUD,EAAQ,QAAU,SAClD,CAAC3E,IAGD,kBAAC6E,EAAA,EAAD,CAAexG,MAAOA,GAEtB,yBAAKiB,UAAU,MAAMwF,IAAO,SAAAC,GAAI,OAAGnC,EAAOQ,QAAU2B,IAClD,yBAAKhJ,GAAG,OAAO+I,IAAO,SAAAC,GAAI,OAAGrC,EAAQU,QAAU2B,IAC/C,yBAAKhJ,GAAG,OAAO4C,MAAO,IAAKJ,OAAQ,QAAayG,IAA8B,0BAC5E,2BAAOjJ,GAAG,QAAQuF,MAAO,CAACsD,QAAQ,QAASK,UAAQ,EAACC,aAAW,IAC/D,yBAAKnJ,GAAG,YAAYuF,MAAO,CACzBjK,SAAS,WACTsH,MAAM,OACNJ,OAAO,WAGb,kBAAC4G,EAAD,CAAcrF,QAAS,CACrB,CAAEJ,KAAM,kBAAC,IAAD,CAAgB7G,MAAM,YAAYwH,QAAS,kBAAIkC,EAAU,cAAe3I,KAAM,WACtF,CAAE8F,KAAM,kBAAC,IAAD,CAAc7G,MAAM,YAAYwH,QAAS,kBAAIkC,EAAU,WAAY3I,KAAM,WACjF,CAAE8F,KAAM,kBAAC,IAAD,CAAgB7G,MAAM,YAAYwH,QAAS,WAhEhDpK,SAASmP,kBAKZnP,SAASoP,iBAJTzC,EAAOQ,QAAQkC,oBAAoBC,OAAM,SAAAC,GACvChD,EAAU,gDAAD,OAAiDgD,EAAIC,QAArD,aAAiED,EAAI5L,KAArE,YA8DmEA,KAAM,kBAExE,SAAXoG,GACC,yBAAKV,UAAU,YACb,kBAAC,IAAD,CACEoG,MAAO,IACPC,QA9Dc,SAAAH,GACtBI,QAAQC,MAAML,IA8DNM,OA9IS,SAAAlK,GACjB,GAAIA,EAAM,CACR,IAAMmK,EAAIC,KAAKlI,MAAMlC,GACrB/E,OAAO2D,YAAYvF,OAAOoC,SAASC,IAAIyO,EAAE3K,EAAE2K,EAAE1K,EAAE0K,EAAEzK,GACjDiH,EAAU,WACV1L,OAAO2D,YAAYtF,SAAS+Q,YAAcF,EAAEG,QAAQ,IAAKhU,KAAK6C,GAC9D8B,OAAO2D,YAAYtF,SAASwF,WAyItB4G,MAAO,CAAE3C,MAAO,WAIrB6D,GAAa,kBAAC,EAAD,CAAO5G,KAAM4G,EAAW5C,QAAS,WAC7C6C,EAAa,MACbF,EAAU,iBC3ME4D,QACW,cAA7BtP,OAAOuP,SAASC,UAEe,UAA7BxP,OAAOuP,SAASC,UAEhBxP,OAAOuP,SAASC,SAASC,MACvB,2DCZNC,IAASzJ,OACP,kBAAC,IAAM0J,WAAP,KACE,kBAAC,EAAD,OAEFvQ,SAASC,eAAe,SDyHpB,kBAAmB4M,WACrBA,UAAU2D,cAAcC,MACrBpD,MAAK,SAAAqD,GACJA,EAAaC,gBAEdrB,OAAM,SAAAM,GACLD,QAAQC,MAAMA,EAAMJ,c","file":"static/js/main.e5116e30.chunk.js","sourcesContent":["const rad2Grad=63.6619772367581 // 1 rad ~= 63 grads \n\nexport const ThemeliodesProblima_1 = (Xa,Ya,Sab,Gab) => {\n\tconst Xb = Xa + Sab*Math.sin(Gab/rad2Grad);\n\tconst Yb = Ya + Sab*Math.cos(Gab/rad2Grad);\n\treturn {Xb:Xb , Yb:Yb};\n}\n\nexport const calculateSab = (Xa,Ya,Xb,Yb) => {\n\tconst absDX= Math.abs(Xb-Xa);\n\tconst absDY = Math.abs(Yb-Ya);\n\tconst Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\treturn Number(Sab.toFixed(4));\n}\n\nexport const ThemeliodesProblima_2 = (Xa,Ya,Xb,Yb) => {\n\t\n\tconst absDX = Math.abs(Xb-Xa);\n\tconst absDY = Math.abs(Yb-Ya);\n\tconst Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\n\tconst DX = Xb-Xa;\n\tconst DY = Yb-Ya;\n\tconst theta =Math.atan((absDX/absDY))*rad2Grad; //http://www.translatorscafe.com/cafe/EN/units-converter/angle/2-3/radian-grad/\n\tlet Gab;\n\tif (DX>0 && DY>0){\n\t\t Gab = theta;\n\t} else if (DX>0 && DY<0){\n\t\t Gab = 200 - theta;\n\t} else if (DX<0 && DY<0){\n\t\t Gab = 200 + theta;\n\t} else if (DX<0 && DY>0){\n\t\t Gab = 400 - theta;\n\t} else if (DX === 0 && DY>0){\n\t\t Gab = 0;\n\t} else if (DX === 0 && DY<0){\n\t\t Gab = 200;\n\t} else if (DX>0 && DY === 0){\n\t\t Gab = 100;\n\t} else if (DX<0 && DY === 0){\n\t\t Gab = 300;\n\t} else if (DX === 0 && DY === 0){\n\t\t Gab = 0;\n\t}\n\treturn {Gab:Gab.toFixed(4) , Sab:Sab.toFixed(4)}\n}","import {calculateSab} from \"./ThemeliodiProblimata\";\nconst Xmin = -50;\n// const Ymin = -50;\n// const Xmax = 50;\nconst Ymax = 50;\nconst XZStep=100/99;\nconst YZStep=100/99;\nconst zScale = 150;\nconst zShift = 0;\nconst DemWidth = 100;\n\nexport const posZ=(positionX,positionY,dem) =>{\n\tif (dem.length === 0) {\n\t\treturn 0;\n\t}\n\tlet axeZ,\n\theightX,\n\theightY,\n\tFHeight1,\n\tFHeight2,\n\tdXZ,\n\tdYZ,\n\tipotinousaX,\n\tipotinousaY,\n\trestX_new,\n\trestY_new,\n\tIpotinousaDiagwniou1,\n\tIpotinousaDiagwniou2,\n\tminIpotinousaX,\n\tminIpotinousaY,\n\tslopeX,\n\tslopeY,\n\tmultX,\n\tmultY,\n\tfinalDXZ,\n\tfinalDYZ,\n\tpercent,\n\trestX,\n\trestY,\n\taxeX,\n\taxeY,\n\tintX,\n\tintY\t;\n\n\t axeX=(calculateSab(0,positionX,0,Xmin)/XZStep).toFixed(4) - 0;\n\t axeY=(calculateSab(0,positionY,0,Ymax)/YZStep).toFixed(4) - 0;\n\t intX=Math.floor(axeX);\n\t intY=Math.floor(axeY);\n\t  restX=axeX-intX;\n\t  restY=axeY-intY;\n\t//   positionAtpoligon = (restX+restY)/2;\n\tif(restX === 0 && restY === 0){\n\t\t axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\treturn Number(dem[axeZ][2].toFixed(4))\n\t}\n\tif (restX<=1-restY){\n\t//check X axis\n\n\t\t axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\t// console.log(axeZ);\n\t\tif (!dem[axeZ] || !dem[axeZ + 1]) return 0;\n\t\t  dXZ=dem[axeZ][2] - dem[axeZ+1][2];\n\t\t  ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\t  restX_new=restX+restY;\n\t\t  IpotinousaDiagwniou2=Math.sqrt(Math.pow(restY*YZStep,2)+Math.pow(restY*XZStep,2));\n\t\t//////\n\t\t  minIpotinousaX = ipotinousaX*restX_new;\n\t\t  slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//  slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\t  multX = Math.sin(slopeX);\n\t\t\n\t\t  finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\t  heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\t  heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t//check Y axis\n\t\t\n\t\tif (!dem[axeZ] || !dem[axeZ + DemWidth]) return 0;\n\t\t  dYZ=(dem[axeZ][2] - dem[axeZ+DemWidth][2]);\n\t\t  ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\t  restY_new=restY+restX;\n\t\t  IpotinousaDiagwniou1=Math.sqrt(Math.pow(restX*XZStep,2)+Math.pow(restX*YZStep,2));\n\t\t//////\n\t\t  minIpotinousaY = ipotinousaY*restY_new;\n\t\t\n\t\t  slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//  slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t  multY = Math.sin(slopeY);\n\t\t\n\t\t  finalDYZ = minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\t  heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\t  heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\t\n\t\t  percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\t  FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\t  FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\t  FHeight2=heightX-FHeight1;\n\t\t}\n\t}\n\telse{\n\t//check X axis\n\t\t axeZ=((intY+1)*DemWidth)+intX+1;//calculate height\n\t\t// console.log(axeZ)\n\t\tif (!dem[axeZ] || !dem[axeZ-1]) return 0;\n\t\t  dXZ=(dem[axeZ][2] - dem[axeZ-1][2]);\n\t\t  ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\t  restX_new=(1-restX)+(1-restY);\n\t\t  IpotinousaDiagwniou2=Math.sqrt(Math.pow((1-restY)*YZStep,2)+Math.pow((1-restY)*XZStep,2));\n\t\t//////\n\t\t  minIpotinousaX = ipotinousaX*(restX_new);\n\t\t  slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//  slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\t  multX = Math.sin(slopeX);\n\t\t  finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\t  heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\t  heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t\t//check Y axis\n\t\tif (!dem[axeZ] || !dem[axeZ-DemWidth]) return 0;\n\t\t  dYZ=(dem[axeZ][2] - dem[axeZ-DemWidth][2]);\n\t\t  ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\t  restY_new=(1-restY)+(1-restX);\n\t\t  IpotinousaDiagwniou1=Math.sqrt(Math.pow((1-restX)*XZStep,2)+Math.pow((1-restX)*YZStep,2));\n\t\t//////\n\t\t  minIpotinousaY = ipotinousaY*(restY_new);\n\t\t\n\t\t  slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//  slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t  multY = Math.sin(slopeY);\n\t\t\n\t\t  finalDYZ= minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\t  heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\t  heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\t  percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\t  FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\t  FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\t  FHeight2=heightX-FHeight1;\n\t\t}\n\n\t}\n\t// console.log(FHeight2)\n\treturn Number(FHeight2.toFixed(4));\n}\n","import * as THREE from 'three';\n// import { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { DeviceOrientationControls } from 'three/examples/jsm/controls/DeviceOrientationControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport {CalculateDeltaPosition} from \"./CalculateDeltaPosition\";\nimport {calculateSab} from \"./ThemeliodiProblimata\";\n        // var modelName = \"models/gltf/\" + model.name + \".glb\";\nvar degtorad = Math.PI / 180; // Degree-to-Radian conversion\n\nGLTFLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n    \n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            scope.parse(event.target.result || event.target.responseText,\"\",callback);\n            // if (callback)\n            //     callback(gltf);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n    reader.readAsArrayBuffer(file);\n\n};\nFBXLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n\n            if (callback)\n                callback(geometry);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n\n    reader.readAsArrayBuffer(file);\n\n};\n\nexport default function\tcreateWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer, mixer,setModelRuntimeInfo,showCoords) {\n      loaders.FBXLoader = FBXLoader;\n    \tloaders.GLTFLoader = GLTFLoader;\n    \tvar clock = new THREE.Clock();\n      // var raycaster = new THREE.Raycaster();\n      // var mouse = new THREE.Vector2();\n\n        const host = document.getElementById(\"three-map\");\n        // const axesHost = document.getElementById(\"axes-helper\");\n      // init();\n      //render(); // remove when using next line for animation loop (requestAnimationFrame)\n\n        \n        const generateTerrain = (g /*,m, e*/) => {\n          const pos = g.getAttribute(\"position\");\n          const pa = pos.array;\n\n          // const hVerts = g.parameters.width;\n          // const wVerts = g.parameters.height;\n          // for (let j = 0; j < hVerts; j++) {\n          //   for (let i = 0; i < wVerts; i++) {\n          //     pa[3 * (j * wVerts + i) + 2] = 300\n              \n          //   }\n          // }\n          for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n              pa[j] = 0;\n          }\n          pos.needsUpdate = true;\n          g.computeVertexNormals();\n        };\n\n\n        scene = new THREE.Scene();\n\n        const video = document.getElementsByTagName( 'video' )[0];\n        var texture = new THREE.VideoTexture( video );\n            texture.minFilter = THREE.LinearFilter;\n            texture.magFilter = THREE.LinearFilter;\n            texture.format = THREE.RGBFormat;\n        scene.background = texture;\n        // const AxesScene = new THREE.Scene();\n        // scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );\n        renderer = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 0 );\n        renderer.setSize( host.clientWidth, host.clientHeight );\n        // const renderer2 = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        // renderer2.setPixelRatio( window.devicePixelRatio );\n        // renderer2.setClearColor( 0x000000, 0 )\n        // renderer2.setSize( axesHost.clientWidth, axesHost.clientHeight );\n\n\n        host.appendChild( renderer.domElement );\n        // axesHost.appendChild( renderer2.domElement );\n        camera = new THREE.PerspectiveCamera( 60, host.clientWidth / host.clientHeight, 1, 10000 );\n        // camera = new THREE.OrthographicCamera( host.clientWidth/-2,host.clientWidth/2,host.clientHeight/2,host.clientHeight/-2, 1, 10000 );\n        camera.position.set( 50,17,50 );\n\n        // camera.up = new THREE.Vector3( 1, 0, 0 );\n\n        // controls = new TrackballControls( camera, renderer.domElement );\n        // controls = new OrbitControls( camera, renderer.domElement );\n        controls = new DeviceOrientationControls( camera );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls.dampingFactor = 0.05;\n        controls.screenSpacePanning = false;\n        controls.minDistance = 1;\n        controls.maxDistance = 1000;\n        // controls.maxPolarAngle = Math.PI / 2;\n        controls.rotateSpeed = 0.8;\n        controls.panSpeed = 0.8;\n        controls.zoomSpeed = 0.8;\n\n        \n\n        // const camera2 = new THREE.PerspectiveCamera( 60, axesHost.clientWidth / axesHost.clientHeight, 1, 10000 );\n        // const camera2 = new THREE.OrthographicCamera( axesHost.clientWidth/-2,axesHost.clientWidth/2,axesHost.clientHeight/2,axesHost.clientHeight/-2, 1, 10000 );\n        // camera2.position.sub( camera.position,controls2.target );\n        // camera2.position.set(6,6,6);\n        // camera2.lookAt( AxesScene.position );\n\n        // const controls2 = new OrbitControls( camera2, renderer.domElement );\n        // //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        // controls2.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        // controls2.dampingFactor = 0.05;\n        // controls2.screenSpacePanning = false;\n        // controls2.maxPolarAngle = Math.PI / 2;\n        // controls2.enablePan = false;\n        // controls2.enableZoom = false;\n        // controls2.update();\n\n        // world\n        var geometry = new THREE.PlaneBufferGeometry( 100, 100, 99, 99 );\n\n        generateTerrain(geometry)        \n\n        var material = new THREE.MeshPhongMaterial( {wireframe:true, color: \"#222\", side: THREE.DoubleSide} );\n\n        material.flatShading = true\n\n        const plane = new THREE.Mesh( geometry, material );\n        plane.position.set( 0, 0, 0 );\n\n        plane.castShadow = false;\n        plane.receiveShadow = false;\n        plane.geometry.rotateX( Math.PI / 2 );\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // helper = new THREE.Mesh( geometry, material );\n        // scene.add( helper );\n\n        scene.add( plane );\n        \n        var gridHelper = new THREE.GridHelper( 10000, 1000 );\n        // gridHelper.geometry.rotateX( Math.PI / 2 );\n        scene.add( gridHelper );\n\n        // var geometry = new THREE.CylinderBufferGeometry( 0, 10, 30, 4, 1 );\n        // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n        // for ( var i = 0; i < 500; i ++ ) {\n        //   var mesh = new THREE.Mesh( geometry, material );\n        //   mesh.position.x = Math.random() * 1600 - 800;\n        //   mesh.position.y = 0;\n        //   mesh.position.z = Math.random() * 1600 - 800;\n        //   mesh.updateMatrix();\n        //   mesh.matrixAutoUpdate = false;\n        //   scene.add( mesh );\n        // }\n        // lights\n        // var light = new THREE.DirectionalLight( 0xffffff );\n        // light.position.set( 1, 1, 50 );\n        \n        // var light = new THREE.HemisphereLight( 0x0000ff, 0x00ff00, 0.6 ); \n        // scene.add( light );\n        // light.shadow = {\n        //   camera: {\n        //     near: 0.5,\n        //     far: 300,\n        //     left: -50,\n        //     bottom: -50,\n        //     right: 50,\n        //     top: 50\n        //   },\n        //   bias: 0.0001,\n        //   mapSize: { x: 1024 * 6, y: 1024 * 6 }\n        // };\n       \n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );\n\n        // var light = new THREE.AmbientLight( 0xffffff ); // soft white light\n        // scene.add( light );\n\n\n        var light = new THREE.AmbientLight( 0x404040,1 ); // soft white light\n        scene.add( light );\n\n\n         var hemiLight = new THREE.HemisphereLight( 0xffffff, 0xffffff, 1 );\n            hemiLight.color.setHSL( 0.6,  0.5,0.75 );\n            hemiLight.groundColor.setHSL( 0.095, 0.5, 0.5 );\n            hemiLight.position.set( 0, 0,50 );\n            scene.add( hemiLight );\n\n            var dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n            window.dirLight = dirLight;\n            dirLight.position.set( 1,  -1, 1 );\n            dirLight.position.multiplyScalar( 50);\n            dirLight.name = \"dirlight\";\n            // dirLight.shadowCameraVisible = true;\n\n            scene.add( dirLight );\n\n            dirLight.castShadow = false;\n            // dirLight.shadow.mapSize.width.set(1024*2)\n            // dirLight.shadow.mapSize.height.set(1024*2);\n\n            // var d = 300;\n\n            // dirLight.shadow.camera.left.set(-d);\n            // dirLight.shadow.camera.right.set(d);\n            // dirLight.shadow.camera.top.set(d);\n            // dirLight.shadow.camera.bottom.set(-d);\n\n            // dirLight.shadow.camera.far.set(3500);\n            // dirLight.shadow.bias.set( -0.0001);\n            // dirLight.shadow.darkness.set(0.35);\n\n        // LIGHTS\n\n        // var hemiLight = new THREE.HemisphereLight( 0xffffff, 0xffffff, 0.6 );\n        // hemiLight.color.setHSL( 0.6,  0.6,1 );\n        // hemiLight.groundColor.setHSL( 0.095,  0.75,1 );\n        // hemiLight.position.set( 0,  0,50 );\n        // scene.add( hemiLight );\n\n        // var hemiLightHelper = new THREE.HemisphereLightHelper( hemiLight, 10 );\n        // scene.add( hemiLightHelper );\n\n        //\n\n        // var dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        // dirLight.color.setHSL( 0.1, 0.95, 1 );\n        // dirLight.position.set( - 1, 1,1.75, );\n        // dirLight.position.multiplyScalar( 30 );\n        // scene.add( dirLight );\n\n        // dirLight.castShadow = true;\n\n        // dirLight.shadow.mapSize.width = 2048;\n        // dirLight.shadow.mapSize.height = 2048;\n\n        // var d = 50;\n\n        // dirLight.shadow.camera.left = - d;\n        // dirLight.shadow.camera.right = d;\n        // dirLight.shadow.camera.top = d;\n        // dirLight.shadow.camera.bottom = - d;\n\n        // dirLight.shadow.camera.far = 3500;\n        // dirLight.shadow.bias = - 0.0001;\n\n        // var dirLightHeper = new THREE.DirectionalLightHelper( dirLight, 10 );\n        // scene.add( dirLightHeper );\n        \n\n        // var axesHelper = new THREE.AxesHelper( 5 );\n        // AxesScene.add( axesHelper );\n        \n        // var light = new THREE.DirectionalLight( 0x002288 );\n        // light.position.set( - 0, - 0, - 100 );\n        // scene.add( light );\n\n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );        \n\n        // var light = new THREE.AmbientLight( 0x666666 );\n        // scene.add( light );\n\n\n        pointer = new THREE.Mesh( new THREE.SphereGeometry( .5, 32, 32 ), new THREE.MeshBasicMaterial( {color: \"red\"} ) );\n        // scene.add( pointer );\n\n        // var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        // var loader = new THREE.TextureLoader();\n        // loader.crossOrigin = \"\";\n        \n        const sky = new THREE.Mesh( new THREE.SphereGeometry( 150, 32, 32 ), new THREE.MeshBasicMaterial({opacity: 0,\n          transparent: true,\n          alphaTest: 0.05,\n          side: THREE.DoubleSide\n        }) );\n        sky.rotation.set(Math.PI/2,0,0)\n        scene.add(sky);\n\n        // loader.load(src,\n        //       function( texture ) {\n        //         sky.rotation.set(Math.PI/2,0,0)\n        //         sky.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n        //         sky.material.needsUpdate = true;\n        //         // props.scene.add(props.sky)  \n        //       },\n        //       function () {},  // onProgress function\n        //       function ( error ) { console.log( error ) } // onError function\n        //   );\n    \n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n        // var test = new THREE.Mesh( geometry, material );\n        // scene.add( test );\n\n      //   function onMouseMove( event ) {\n      //   // calculate mouse position in normalized device coordinates\n      //   // (-1 to +1) for both components\n      //   const el = document.getElementById(\"three-map\").getBoundingClientRect()\n      //   const left = el.left;\n      //   const top = el.top;\n      //   mouse.x = ( (event.clientX-left) / host.clientWidth ) * 2 - 1;\n      //   mouse.y = - ( (event.clientY - top) / host.clientHeight ) * 2 + 1;\n\n      //   raycaster.setFromCamera( mouse, camera );\n\n      //   // See if the ray from the camera into the world hits one of our meshes\n      //   var intersects = raycaster.intersectObject( plane );\n\n      //   // Toggle rotation bool for meshes that we clicked\n      //   if ( intersects.length > 0 ) {\n\n      //     pointer.position.set( 0, 0, 0 );\n      //     pointer.lookAt( intersects[ 0 ].face.normal );\n\n      //     pointer.position.copy( intersects[ 0 ].point );\n      //     const posX = Math.sqrt(Math.pow(-50 - -50,2) + Math.pow( pointer.position.x - -50,2) ) / 100;\n      //     const posY = Math.sqrt(Math.pow(-50 - -50,2) + Math.pow( -50 - pointer.position.y,2) ) / 100;\n      //     const posZ = Math.sqrt(Math.pow(0 - 0,2) + Math.pow( 0 - pointer.position.z,2) );\n      //     showCoords(posX,posY,posZ);\n      //     window.array = window.array || \"\";\n      //     window.array += `${pointer.position.x.toFixed(4)},${pointer.position.y.toFixed(4)},${pointer.position.z.toFixed(4)}\\n`\n      //   }\n\n\n      // }\n      function onWindowResize() {\n        camera.aspect = host.clientWidth / host.clientHeight;\n        camera.updateProjectionMatrix();\n        // camera2.updateProjectionMatrix();\n        renderer.setSize( host.clientWidth, host.clientHeight );\n      }\n\n      function animate() {\n            setTimeout( function() {\n                requestAnimationFrame( animate );\n                if(window.mergin_mode.scene?.visible !== false){\n                    controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n                    render();\n                }\n            }, 60 );\n\n      }\n\n      function render() {\n        var delta = clock.getDelta();\n\n        for ( var i = 0; i < window.mergin_mode.mixers.length; ++ i ) {\n\n          window.mergin_mode.mixers[ i ].update( delta );\n\n        }\n        window.mergin_mode.modelLayer.forEach(md => {\n          const model = {...md,mesh:md.mesh.children[0]};\n          const {x,y,z} = model.mesh.position;\n          const {animating,activeRow} = model.runtimeInfo;\n          const activeRowData = window.mergin_mode.vectors.data.filter(v=>v.id === model.vectorId)[0].array[0][activeRow];\n          const xStart = activeRowData[0];\n          const yStart = activeRowData[1];\n          // const zStart = activeRowData[2];\n          const Gab = activeRowData[3];\n          const Sab = activeRowData[4];\n          if(\n            animating &&\n            typeof x !== \"undefined\" &&\n            typeof y !== \"undefined\" &&\n            typeof z !== \"undefined\"\n            ) {\n            const dem =window.mergin_mode.plane.dem;\n            const {x:newX,y:newY,z:newZ} = CalculateDeltaPosition(Number(x.toFixed(4)),Number(y.toFixed(4)),Number(z.toFixed(4)),Gab,delta,dem);\n            let newSab = calculateSab(xStart,yStart,x,y);\n            if(newSab === Infinity){\n              newSab = 0\n            }\n            if(newSab < Sab){\n              model.mesh.position.set(newX,newY,newZ);\n            } else {\n              const newActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id === model.vectorId)[0].array[0][activeRow + 1];\n              if(!newActiveRow) {\n                  // const startActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id === model.vectorId)[0].array[0][0];\n\n                  // model.mesh.position.set(startActiveRow[0],startActiveRow[1],startActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:false,activeRow:0})\n              } else {\n                  // model.mesh.position.set(newActiveRow[0],newActiveRow[1],newActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:true,activeRow:activeRow + 1})\n                  // model.mesh.rotation.set(model.mesh.rotation.x,model.mesh.rotation.y,newActiveRow[3]/63.6619772367581)\n                  // model.mesh.rotation.y = (-newActiveRow[3] + 200)/63.6619772367581\n                  // const axisX = new Vector3(1, 0, 0);\n                  // const axisY = new Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  // mesh.rotateOnWorldAxis(axisX, rot.x);\n                  // mesh.rotateOnWorldAxis(axisY, rot.y);\n                  model.mesh.rotateOnWorldAxis(axisZ, - (400 - activeRowData[3] + newActiveRow[3])/63.6619772367581);\n              }\n            }\n            // console.log(model.mesh.position)\n            \n          }\n        })\n        renderer.render( scene, camera );\n        // renderer2.render( AxesScene, camera2 );\n      }\n\n      animate();\n       \n      window.addEventListener( 'resize', onWindowResize, false );\n      // document.getElementById(\"three-map\").addEventListener( 'click', onMouseMove, false );\n\n      partials = {plane,pointer,sky,gridHelper};\n      return {plane,camera,controls,scene,renderer,pointer,partials,loaders,onWindowResize}\n}","import {ThemeliodesProblima_1} from \"./ThemeliodiProblimata\";\nimport {posZ} from \"./computeZ\";\n\nexport const CalculateDeltaPosition = (Xa,Ya,Za,Gab,delta,dem) => {\n\tconst Sab = delta*1.75; //distance in meters per second (50km/h)\n\tlet posXY = ThemeliodesProblima_1(Xa,Ya,Sab,Gab);\n\tconst newZ =posZ(posXY.Xb,posXY.Yb,dem);\n \t// const DZ = posZ(posXY.Xb,posXY.Yb,dem)-Za;\n\t// const DZ = 0;\n\t// if(DZ<0 || DZ >0) {\n\t// \tconst slope = DZ/Sab;\n\t// \tconst slopeRadians = Math.atan(slope);\n\t// \tconst SabNew = Math.abs(Sab*Math.cos(slopeRadians));\n\t// \tposXY = ThemeliodesProblima_1(Xa,Ya,SabNew,Gab);\n\t// }\n\n\t// const PxPosition = UserCoordinatesXY(posXY.Xb,posXY.Yb);\n\t\n\treturn {x:posXY.Xb , y:posXY.Yb , z:newZ};\n}\n\nexport const CalculateDeltaRotation = (Xa,Ya,Za,Xb,Yb,Zb,Gab,Sab,rotX,rotY) => {\n\tvar DZ = Zb-Za;\n\tvar XYkathetis = ThemeliodesProblima_1(Xb,Yb,Sab,Gab+100);\n\tvar Xkathetis =XYkathetis.Xb;\n\tvar Ykathetis =XYkathetis.Yb;\n\tvar Zkathetis = posZ(Xkathetis,Ykathetis);\n\tvar DZkathetis = Zb-Zkathetis;\n\t\n\tvar RotationX = 0;\n\tvar RotationY =0;\n\t\n\tif(DZ<0 || DZ >0){\n\t\tRotationX = Math.atan(DZ/Sab) ;\n\t\tRotationY = Math.atan(DZkathetis/Sab) ;\n\t}\n\n\tvar DRotationX=rotX-RotationX;\n\tvar DRotationY=rotY-RotationY;\n\t\n\treturn {\n\t\tx:Number(DRotationX),\n\t\ty:Number(DRotationY)\n\t};\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\n\n\nexport default (props) => {\n  const useStyles = makeStyles((theme) => ({\n  root: {\n    height: 380,\n    transform: 'translateZ(0px)',\n    flexGrow: 1,\n    position: \"absolute\",\n    zIndex: 10,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  speedDial: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    \n  }\n}));\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  \n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Backdrop open={open} />\n      <SpeedDial\n        ariaLabel=\"Action Tooltip\"\n        className={classes.speedDial}\n        icon={<SpeedDialIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n      >\n        {props.actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            tooltipOpen\n            onClick={handleClose}\n\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    maxWidth:\"50%\",\n    width:\"50%\",\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default (props)=> {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">\n        {props.data}\n      </p>\n    </div>\n  );\n\n  return (\n      <Modal\n        open={true}\n        onClose={props.onClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n  );\n}","import React, { useRef,useState,useEffect } from 'react';\nimport './App.css';\nimport createWorld from \"./helpers/createWorld.js\";\nimport QrReader from 'react-qr-reader';\nimport ActionButton from './layout/ActionButton';\nimport Modal from './layout/Modal';\n\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\n\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport PrintIcon from '@material-ui/icons/Print';\n\nimport ShareIcon from '@material-ui/icons/Share';\n\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CropFreeIcon from '@material-ui/icons/CropFree';\nimport StreetviewIcon from '@material-ui/icons/Streetview';\n\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\n\nimport { fromLonLat } from \"ol/proj.js\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#b34f0b\",\n    },\n    secondary: {\n      main: \"#323228\",\n    },\n  },\n});\n\nconst towerlocationConvert = fromLonLat([40.626374, 22.948324,15.25]);\nconst treelocationConvert = fromLonLat([40.626260, 22.947929,15.25]);\nconst userConvert = fromLonLat([40.626288, 22.947957,15.25]);\nconst towerlocation = [towerlocationConvert[0],towerlocationConvert[2],towerlocationConvert[1]];\nconst treelocation = [treelocationConvert[0],treelocationConvert[2],treelocationConvert[1]];\n\nwindow.mergin_mode = {\n  modelLayer: [],\n  vectors:[],\n  plane:{},\n  sky:{},\n  mixers:[],\n  camera:{},\n  controls:{},\n  scene:{},\n  renderer:{},\n  pointer:{},\n  partials:{},\n  loaders:{},\n  onWindowResize:()=>{}\n}\n\nfunction App() {\n  \n  const [position,setPosition] = useState({latitude:0,longitude:0});\n  const [action,setAction] = useState(\"immerse\");\n  const [modalData,setModalData] = useState(null);\n  const mainRef = useRef(null);\n  const appRef = useRef(null);\n  const pos = useRef(position);\n  const qrScanner = useRef({});\n  const handleScan = data => {\n    if (data) {\n      const d = JSON.parse(data)\n      window.mergin_mode.camera.position.set(d.x,d.y,d.z);\n      setAction(\"immerse\")\n      window.mergin_mode.controls.alphaOffset = d.heading/180 *Math.PI;\n      window.mergin_mode.controls.update();\n\n\n    }\n  }\n  const  loadGLTFModel = (file,resolve) => {\n    const {name,size,url} = file[0];\n    const {scene,loaders} = window.mergin_mode;\n\n    const loader = new loaders.GLTFLoader();\n    var dracoLoader = new DRACOLoader();\n    loader.setDRACOLoader( dracoLoader );\n      loader.load(url, gltf => {\n         // var scene = gltf.scene;\n\n          // model.animations = gltf.animations;\n          // model.scene = scene;\n\n          // Enable Shadows\n\n          // gltf.scene.traverse( function ( object ) {\n\n          //   if ( object.isMesh ) {\n\n          //     object.castShadow = true;\n\n          //   }\n\n          // } );\n        gltf.scene.position.set(...towerlocation)\n        window.mergin_mode.plane.position.set(...towerlocation)\n        scene.add(gltf.scene)\n        // props.loadModel({name,size,object:gltf});\n        // setModalOpen(false);       \n        // const newLayers = {...props.layers};\n        // newLayers.tree[0].children.push({ key: `0-${newLayers.tree[0].children.length}`, title: name, checkable:false,selectable:false})\n        // props.setLayers(newLayers);       \n        // resolve(true);\n\n      });\n    } \n  const  loadFBXModel = (file) => {\n    const {name,size,url} = file[0];\n    const {scene,loaders} = window.mergin_mode;\n    const loader = new loaders.FBXLoader();\n      loader.load(url, object => {\n        // if(object.animations.length > 0) {\n        //   elements.mixer = new THREE.AnimationMixer( object );\n        //   var action = elements.mixer.clipAction( object.animations[ 0 ] );\n        //   action.play();  \n        // }\n        \n        object.traverse( child => {\n          if ( child.isMesh ) {\n            child.castShadow = true;\n            child.receiveShadow = true;\n          }\n        } );\n        object.scale.set(0.2,0.2,0.2)\n        object.position.set(...treelocation)\n        // scene.add(object)\n      });\n  }\n\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      appRef.current.requestFullscreen().catch(err => {\n        modalData(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n      });\n    } else {\n      document.exitFullscreen();\n    }\n  }\n  const handleScanError = err => {\n    console.error(err)\n  }\n\n  useEffect(()=>{\n    if(!navigator.geolocation?.getCurrentPosition || !navigator.mediaDevices?.getUserMedia){\n      return false;\n    }\n    const constraints = { video: { width: 1280, height: 720, facingMode: 'environment' } };\n    \n    navigator.geolocation.getCurrentPosition(function success(position) {\n        const latitude  = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        pos.current = {latitude,longitude};\n        setPosition(pos.current);\n     },()=>{});\n\n    navigator.mediaDevices.getUserMedia(constraints).then(response=>{\n\n        const video = document.getElementById(\"video\");\n        video.srcObject = response;\n        video.play();\n      });\n\n    let {mixers,camera,controls,scene,renderer,pointer,partials,loaders} = window.mergin_mode;\n    const rendererContainer = document.getElementById(\"three-map\");\n    const newWorld = createWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer,mixers);\n    window.mergin_mode = {...window.mergin_mode,...newWorld};\n\n    loadFBXModel([{url:process.env.PUBLIC_URL + \"/tree-green.fbx\"}]);\n    loadGLTFModel([{url:process.env.PUBLIC_URL + \"/white-tower.gltf\"}]);\n  },[])\n\n  useEffect(()=>{\n    const check = action === \"immerse\"\n    window.mergin_mode.scene.visible = check;\n    window.mergin_mode.scene.needsUpdate = true;\n    mainRef.current.style.display = check ? \"block\" : \"none\" \n  },[action])\n\n  return (\n    <ThemeProvider theme={theme}>\n\n    <div className=\"App\" ref = {elem=>(appRef.current = elem)}>\n      <div id=\"main\" ref = {elem=>(mainRef.current = elem)}>\n      <img id=\"logo\" width={120} height={120*469/640} src={process.env.PUBLIC_URL + '/logo-transparent.png'} />\n        <video id=\"video\" style={{display:\"none\"}} autoPlay playsInline></video>\n        <div id=\"three-map\" style={{\n          position:\"absolute\",\n          width:`100%`,\n          height:`100%`,\n        }}></div>\n      </div>\n    <ActionButton actions={[\n      { icon: <StreetviewIcon color=\"secondary\" onClick={()=>setAction(\"immerse\")}/>, name: 'Immerse' },\n      { icon: <CropFreeIcon color=\"secondary\" onClick={()=>setAction(\"scan\")}/>, name: 'QR Scan' },\n      { icon: <FullscreenIcon color=\"secondary\" onClick={()=>toggleFullscreen()}/>, name: 'Full Screen' },\n    ]}/>\n      {action === \"scan\" && (\n        <div className=\"scan-tip\">\n          <QrReader\n            delay={300}\n            onError={handleScanError}\n            onScan={handleScan}\n            style={{ width: '100%' }}\n          />\n        </div>\n              )}\n      {modalData && <Modal data={modalData} onClose={()=>{\n        setModalData(null);\n        setAction(\"immerse\");\n      }}/>}\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}