{"version":3,"sources":["helpers/ThemeliodiProblimata.js","helpers/computeZ.js","helpers/createWorld.js","helpers/CalculateDeltaPosition.js","App.js","serviceWorker.js","index.js"],"names":["ThemeliodesProblima_1","Xa","Ya","Sab","Gab","Xb","Math","sin","Yb","cos","calculateSab","absDX","abs","absDY","sqrt","pow","Number","toFixed","posZ","positionX","positionY","dem","length","axeX","axeY","intX","floor","intY","restX","restY","axeZ","dXZ","ipotinousaX","restX_new","IpotinousaDiagwniou2","minIpotinousaX","slopeX","atan","finalDXZ","heightX","dYZ","ipotinousaY","restY_new","IpotinousaDiagwniou1","minIpotinousaY","slopeY","finalDYZ","heightY","percent","FHeight1","FHeight2","createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","mixer","setModelRuntimeInfo","showCoords","FBXLoader","GLTFLoader","clock","THREE","host","document","getElementById","antialias","alpha","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","clientWidth","clientHeight","appendChild","domElement","position","set","up","DeviceOrientationControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","PI","rotateSpeed","panSpeed","zoomSpeed","g","pos","getAttribute","pa","array","j","i","needsUpdate","computeVertexNormals","generateTerrain","geometry","material","wireframe","color","side","flatShading","plane","castShadow","receiveShadow","add","gridHelper","rotateX","light","hemiLight","setHSL","groundColor","dirLight","multiplyScalar","name","shadowMapWidth","shadowMapHeight","d","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraFar","shadowBias","shadowDarkness","crossOrigin","opacity","transparent","alphaTest","sky","onWindowResize","aspect","updateProjectionMatrix","rotation","animate","requestAnimationFrame","update","delta","getDelta","mergin_mode","mixers","modelLayer","map","md","model","mesh","children","x","y","z","runtimeInfo","animating","activeRow","activeRowData","vectors","data","filter","v","id","vectorId","xStart","yStart","Za","posXY","newZ","CalculateDeltaPosition","newX","newY","newSab","Infinity","newActiveRow","axisZ","rotateOnWorldAxis","render","addEventListener","prototype","load2","files","callback","scope","this","file","reader","FileReader","onload","event","target","readyState","status","parse","result","responseText","readAsArrayBuffer","App","webcamRef","useRef","useState","width","height","aspectRatio","cameraSettings","setCameraSettings","elements","useEffect","navigator","mediaDevices","getUserMedia","video","then","response","settings","getTracks","getSettings","innerWidth","innerHeight","dispatchEvent","Event","className","style","display","justifyContent","alignItems","ref","videoConstraints","facingMode","zIndex","Boolean","location","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4b71ddfb.chunk.js","sourcesContent":["export const ThemeliodesProblima_1 = (Xa,Ya,Sab,Gab) => {\n\t//1rad=63.6619772367581grads\n\tconst Xb = Xa + Sab*Math.sin(Gab/63.6619772367581);\n\tconst Yb = Ya + Sab*Math.cos(Gab/63.6619772367581);\n\treturn {Xb:Xb , Yb:Yb};\n}\nexport const calculateSab = (Xa,Ya,Xb,Yb) => {\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\treturn Number(Sab.toFixed(4));\n}\nexport const ThemeliodesProblima_2 = (Xa,Ya,Xb,Yb) => {\n\t\n\tvar absDX = Math.abs(Xb-Xa);\n\tvar absDY = Math.abs(Yb-Ya);\n\tvar Sab = Math.sqrt( Math.pow(absDX,2) + Math.pow(absDY,2) );\n\tvar DX = Xb-Xa;\n\tvar DY = Yb-Ya;\n\tvar theta =Math.atan((absDX/absDY))*63.6619772367581; //http://www.translatorscafe.com/cafe/EN/units-converter/angle/2-3/radian-grad/\n\tif (DX>0 && DY>0){\n\t\tvar Gab = theta;\n\t}\n\tif (DX>0 && DY<0){\n\t\tvar Gab = 200 - theta;\n\t}\n\tif (DX<0 && DY<0){\n\t\tvar Gab = 200 + theta;\n\t}\n\tif (DX<0 && DY>0){\n\t\tvar Gab = 400 - theta;\n\t}\n\tif (DX==0 && DY>0){\n\t\tvar Gab = 0;\n\t}\n\tif (DX==0 && DY<0){\n\t\tvar Gab = 200;\n\t}\n\tif (DX>0 && DY==0){\n\t\tvar Gab = 100;\n\t}\n\tif (DX<0 && DY==0){\n\t\tvar Gab = 300;\n\t}\n\tif (DX==0 && DY==0){\n\t\tvar Gab = 0;\n\t}\n\t//Gab = Gab/63.6619772367581;\n\treturn {Gab:Gab.toFixed(4) , Sab:Sab.toFixed(4)}\n}","import {calculateSab} from \"./ThemeliodiProblimata\";\nconst Xmin = -50;\nconst Ymin = -50;\nconst Xmax = 50;\nconst Ymax = 50;\nconst XZStep=100/99;\nconst YZStep=100/99;\nconst zScale = 150;\nconst zShift = 0;\nconst DemWidth = 100;\n\nexport const posZ=(positionX,positionY,dem) =>{\n\tif (dem.length == 0) {\n\t\treturn 0;\n\t}\n\tvar axeX=(calculateSab(0,positionX,0,Xmin)/XZStep).toFixed(4) - 0;\n\tvar axeY=(calculateSab(0,positionY,0,Ymax)/YZStep).toFixed(4) - 0;\n\tvar intX=Math.floor(axeX);\n\tvar intY=Math.floor(axeY);\n\tvar restX=axeX-intX;\n\tvar restY=axeY-intY;\n\t// var positionAtpoligon = (restX+restY)/2;\n\tif(restX == 0 && restY == 0){\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\treturn Number(dem[axeZ][2].toFixed(4))\n\t}\n\tif (restX<=1-restY){\n\t//check X axis\n\n\t\tvar axeZ=((intY)*DemWidth)+intX;//calculate height\n\t\t// console.log(axeZ);\n\t\tif (!dem[axeZ] || !dem[axeZ + 1]) return 0;\n\t\tvar dXZ=dem[axeZ][2] - dem[axeZ+1][2];\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=restX+restY;\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow(restY*YZStep,2)+Math.pow(restY*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*restX_new;\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\t\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t//check Y axis\n\t\t\n\t\tif (!dem[axeZ] || !dem[axeZ + DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ+DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=restY+restX;\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow(restX*XZStep,2)+Math.pow(restX*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*restY_new;\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ = minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\t\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\t}\n\telse{\n\t//check X axis\n\t\tvar axeZ=((intY+1)*DemWidth)+intX+1;//calculate height\n\t\t// console.log(axeZ)\n\t\tif (!dem[axeZ] || !dem[axeZ-1]) return 0;\n\t\tvar dXZ=(dem[axeZ][2] - dem[axeZ-1][2]);\n\t\tvar ipotinousaX= Math.sqrt(Math.pow((dXZ/zScale - zShift),2)+Math.pow(XZStep,2));\n\t\t//////\n\t\tvar restX_new=(1-restX)+(1-restY);\n\t\tvar IpotinousaDiagwniou2=Math.sqrt(Math.pow((1-restY)*YZStep,2)+Math.pow((1-restY)*XZStep,2));\n\t\t//////\n\t\tvar minIpotinousaX = ipotinousaX*(restX_new);\n\t\tvar slopeX = Math.atan( Math.abs((dXZ/zScale - zShift)/XZStep) );\n\t\t//var slopeX = Math.atan( (Math.abs(dXZ)/zScale - zShift)/XZStep) ;\n\t\tvar multX = Math.sin(slopeX);\n\t\tvar finalDXZ= minIpotinousaX*multX;\n\t\tif (dXZ<0){\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)+finalDXZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightX = (dem[axeZ][2]/zScale - zShift)-finalDXZ;\n\t\t}\n\t\t//check Y axis\n\t\tif (!dem[axeZ] || !dem[axeZ-DemWidth]) return 0;\n\t\tvar dYZ=(dem[axeZ][2] - dem[axeZ-DemWidth][2]);\n\t\tvar ipotinousaY= Math.sqrt(Math.pow((dYZ/zScale - zShift),2)+Math.pow(YZStep,2));\n\t\t//////\n\t\tvar restY_new=(1-restY)+(1-restX);\n\t\tvar IpotinousaDiagwniou1=Math.sqrt(Math.pow((1-restX)*XZStep,2)+Math.pow((1-restX)*YZStep,2));\n\t\t//////\n\t\tvar minIpotinousaY = ipotinousaY*(restY_new);\n\t\t\n\t\tvar slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\t//var slopeY = Math.atan( Math.abs((dYZ/zScale - zShift)/YZStep) );\n\t\tvar multY = Math.sin(slopeY);\n\t\t\n\t\tvar finalDYZ= minIpotinousaY*multY;\n\t\tif (dYZ<0){\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)+finalDYZ;\n\t\t}\n\t\telse{\n\t\t\tvar heightY = (dem[axeZ][2]/zScale - zShift)-finalDYZ;\n\t\t}\n\t\tvar percent=IpotinousaDiagwniou2/(IpotinousaDiagwniou1+IpotinousaDiagwniou2);\n\t\tvar FHeight1=Math.abs(heightX-heightY)*percent;\n\t\tif ((heightX-heightY)<0){\n\t\t\tvar FHeight2=heightX+FHeight1;\n\t\t}\n\t\telse{\n\t\t\tvar FHeight2=heightX-FHeight1;\n\t\t}\n\n\t}\n\t// console.log(FHeight2)\n\treturn Number(FHeight2.toFixed(4));\n}\n","import * as THREE from 'three';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { DeviceOrientationControls } from 'three/examples/jsm/controls/DeviceOrientationControls.js';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport {CalculateDeltaPosition} from \"./CalculateDeltaPosition\";\nimport {calculateSab} from \"./ThemeliodiProblimata\";\n        // var modelName = \"models/gltf/\" + model.name + \".glb\";\n\nGLTFLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n    \n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            scope.parse(event.target.result || event.target.responseText,\"\",callback);\n            // if (callback)\n            //     callback(gltf);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n    reader.readAsArrayBuffer(file);\n\n};\nFBXLoader.prototype.load2 = function(files, callback) {\n    var scope = this;\n    var file = files[0];\n\n    var reader = new FileReader();\n\n    reader.onload = function(event) {\n        if (event.target.readyState === 2 || event.target.status === 0) {\n            var geometry = scope.parse(event.target.result || event.target.responseText);\n\n            if (callback)\n                callback(geometry);\n\n        } else {\n\n            // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n\n        }\n    };\n\n    reader.readAsArrayBuffer(file);\n\n};\n\nexport default function\tcreateWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer, mixer,setModelRuntimeInfo,showCoords) {\n      loaders.FBXLoader = FBXLoader;\n    \tloaders.GLTFLoader = GLTFLoader;\n    \tvar clock = new THREE.Clock();\n      var raycaster = new THREE.Raycaster();\n      var mouse = new THREE.Vector2();\n\n        const host = document.getElementById(\"three-map\");\n        const axesHost = document.getElementById(\"axes-helper\");\n      // init();\n      //render(); // remove when using next line for animation loop (requestAnimationFrame)\n\n        \n        const generateTerrain = (g /*,m, e*/) => {\n          const pos = g.getAttribute(\"position\");\n          const pa = pos.array;\n\n          // const hVerts = g.parameters.width;\n          // const wVerts = g.parameters.height;\n          // for (let j = 0; j < hVerts; j++) {\n          //   for (let i = 0; i < wVerts; i++) {\n          //     pa[3 * (j * wVerts + i) + 2] = 300\n              \n          //   }\n          // }\n          for (let j = 2,i=0; j < pa.length; j+=3,i++) {\n              pa[j] = 0;\n          }\n          pos.needsUpdate = true;\n          g.computeVertexNormals();\n        };\n\n\n        scene = new THREE.Scene();\n        const AxesScene = new THREE.Scene();\n        // scene.fog = new THREE.FogExp2( 0xcccccc, 0.002 );\n        renderer = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 0 );\n        renderer.setSize( host.clientWidth, host.clientHeight );\n        // const renderer2 = new THREE.WebGLRenderer( { antialias: true,alpha:true } );\n        // renderer2.setPixelRatio( window.devicePixelRatio );\n        // renderer2.setClearColor( 0x000000, 0 )\n        // renderer2.setSize( axesHost.clientWidth, axesHost.clientHeight );\n\n\n        host.appendChild( renderer.domElement );\n        // axesHost.appendChild( renderer2.domElement );\n        camera = new THREE.PerspectiveCamera( 60, host.clientWidth / host.clientHeight, 1, 10000 );\n        // camera = new THREE.OrthographicCamera( host.clientWidth/-2,host.clientWidth/2,host.clientHeight/2,host.clientHeight/-2, 1, 10000 );\n        camera.position.set( 80, 80, 80 );\n        camera.up.set(0,0,1);\n\n        // controls = new TrackballControls( camera, renderer.domElement );\n        // controls = new OrbitControls( camera, renderer.domElement );\n        controls = new DeviceOrientationControls( camera );\n        //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        controls.dampingFactor = 0.05;\n        controls.screenSpacePanning = false;\n        controls.minDistance = 1;\n        controls.maxDistance = 1000;\n        controls.maxPolarAngle = Math.PI / 2;\n        controls.rotateSpeed = 0.8;\n        controls.panSpeed = 0.8;\n        controls.zoomSpeed = 0.8;\n\n        \n\n        // const camera2 = new THREE.PerspectiveCamera( 60, axesHost.clientWidth / axesHost.clientHeight, 1, 10000 );\n        // const camera2 = new THREE.OrthographicCamera( axesHost.clientWidth/-2,axesHost.clientWidth/2,axesHost.clientHeight/2,axesHost.clientHeight/-2, 1, 10000 );\n        // camera2.position.sub( camera.position,controls2.target );\n        // camera2.position.set(6,6,6);\n        // camera2.lookAt( AxesScene.position );\n\n        // const controls2 = new OrbitControls( camera2, renderer.domElement );\n        // //controls.addEventListener( 'change', render ); // call this only in static scenes (i.e., if there is no animation loop)\n        // controls2.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n        // controls2.dampingFactor = 0.05;\n        // controls2.screenSpacePanning = false;\n        // controls2.maxPolarAngle = Math.PI / 2;\n        // controls2.enablePan = false;\n        // controls2.enableZoom = false;\n        // controls2.update();\n\n        // world\n        var geometry = new THREE.PlaneBufferGeometry( 100, 100, 99, 99 );\n\n        generateTerrain(geometry)        \n\n        var material = new THREE.MeshPhongMaterial( {wireframe:true, color: \"#222\", side: THREE.DoubleSide} );\n\n        material.flatShading = true\n\n        const plane = new THREE.Mesh( geometry, material );\n        plane.position.set( 0, 0, 0 );\n\n        plane.castShadow = true;\n        plane.receiveShadow = true;\n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffff00} );\n        // helper = new THREE.Mesh( geometry, material );\n        // scene.add( helper );\n\n        scene.add( plane );\n        \n        var gridHelper = new THREE.GridHelper( 10000, 1000 );\n        gridHelper.geometry.rotateX( Math.PI / 2 );\n        scene.add( gridHelper );\n\n        // var geometry = new THREE.CylinderBufferGeometry( 0, 10, 30, 4, 1 );\n        // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } );\n        // for ( var i = 0; i < 500; i ++ ) {\n        //   var mesh = new THREE.Mesh( geometry, material );\n        //   mesh.position.x = Math.random() * 1600 - 800;\n        //   mesh.position.y = 0;\n        //   mesh.position.z = Math.random() * 1600 - 800;\n        //   mesh.updateMatrix();\n        //   mesh.matrixAutoUpdate = false;\n        //   scene.add( mesh );\n        // }\n        // lights\n        // var light = new THREE.DirectionalLight( 0xffffff );\n        // light.position.set( 1, 1, 50 );\n        \n        // var light = new THREE.HemisphereLight( 0x0000ff, 0x00ff00, 0.6 ); \n        // scene.add( light );\n        // light.shadow = {\n        //   camera: {\n        //     near: 0.5,\n        //     far: 300,\n        //     left: -50,\n        //     bottom: -50,\n        //     right: 50,\n        //     top: 50\n        //   },\n        //   bias: 0.0001,\n        //   mapSize: { x: 1024 * 6, y: 1024 * 6 }\n        // };\n       \n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );\n\n        // var light = new THREE.AmbientLight( 0xffffff ); // soft white light\n        // scene.add( light );\n\n\n        var light = new THREE.AmbientLight( 0x404040,1 ); // soft white light\n        scene.add( light );\n\n\n         var hemiLight = new THREE.HemisphereLight( 0xffffff, 0xffffff, 1 );\n            hemiLight.color.setHSL( 0.6,  0.5,0.75 );\n            hemiLight.groundColor.setHSL( 0.095, 0.5, 0.5 );\n            hemiLight.position.set( 0, 0,50 );\n            scene.add( hemiLight );\n\n            var dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n            window.dirLight = dirLight;\n            dirLight.position.set( 1,  -1, 1 );\n            dirLight.position.multiplyScalar( 50);\n            dirLight.name = \"dirlight\";\n            // dirLight.shadowCameraVisible = true;\n\n            scene.add( dirLight );\n\n            dirLight.castShadow = true;\n            dirLight.shadowMapWidth = dirLight.shadowMapHeight = 1024*2;\n\n            var d = 300;\n\n            dirLight.shadowCameraLeft = -d;\n            dirLight.shadowCameraRight = d;\n            dirLight.shadowCameraTop = d;\n            dirLight.shadowCameraBottom = -d;\n\n            dirLight.shadowCameraFar = 3500;\n            dirLight.shadowBias = -0.0001;\n            dirLight.shadowDarkness = 0.35;\n\n        // LIGHTS\n\n        // var hemiLight = new THREE.HemisphereLight( 0xffffff, 0xffffff, 0.6 );\n        // hemiLight.color.setHSL( 0.6,  0.6,1 );\n        // hemiLight.groundColor.setHSL( 0.095,  0.75,1 );\n        // hemiLight.position.set( 0,  0,50 );\n        // scene.add( hemiLight );\n\n        // var hemiLightHelper = new THREE.HemisphereLightHelper( hemiLight, 10 );\n        // scene.add( hemiLightHelper );\n\n        //\n\n        // var dirLight = new THREE.DirectionalLight( 0xffffff, 1 );\n        // dirLight.color.setHSL( 0.1, 0.95, 1 );\n        // dirLight.position.set( - 1, 1,1.75, );\n        // dirLight.position.multiplyScalar( 30 );\n        // scene.add( dirLight );\n\n        // dirLight.castShadow = true;\n\n        // dirLight.shadow.mapSize.width = 2048;\n        // dirLight.shadow.mapSize.height = 2048;\n\n        // var d = 50;\n\n        // dirLight.shadow.camera.left = - d;\n        // dirLight.shadow.camera.right = d;\n        // dirLight.shadow.camera.top = d;\n        // dirLight.shadow.camera.bottom = - d;\n\n        // dirLight.shadow.camera.far = 3500;\n        // dirLight.shadow.bias = - 0.0001;\n\n        // var dirLightHeper = new THREE.DirectionalLightHelper( dirLight, 10 );\n        // scene.add( dirLightHeper );\n        \n\n        // var axesHelper = new THREE.AxesHelper( 5 );\n        // AxesScene.add( axesHelper );\n        \n        // var light = new THREE.DirectionalLight( 0x002288 );\n        // light.position.set( - 0, - 0, - 100 );\n        // scene.add( light );\n\n\n        // var lhelper = new THREE.DirectionalLightHelper( light, 5 );\n        // scene.add( lhelper );        \n\n        // var light = new THREE.AmbientLight( 0x666666 );\n        // scene.add( light );\n\n\n        var geometry = new THREE.SphereGeometry( .5, 32, 32 );\n        var material = new THREE.MeshBasicMaterial( {color: \"red\"} );\n        pointer = new THREE.Mesh( geometry, material );\n        // scene.add( pointer );\n\n        var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        var loader = new THREE.TextureLoader();\n        loader.crossOrigin = \"\";\n        var geometry = new THREE.SphereGeometry( 150, 32, 32 );\n        var material = new THREE.MeshBasicMaterial({opacity: 0,\n          transparent: true,\n          alphaTest: 0.05,\n          side: THREE.DoubleSide\n        });\n        const sky = new THREE.Mesh( geometry, material );\n        sky.rotation.set(Math.PI/2,0,0)\n        scene.add(sky);\n\n        // loader.load(src,\n        //       function( texture ) {\n        //         sky.rotation.set(Math.PI/2,0,0)\n        //         sky.material = new THREE.MeshBasicMaterial( { map: texture, side: THREE.BackSide } );\n        //         sky.material.needsUpdate = true;\n        //         // props.scene.add(props.sky)  \n        //       },\n        //       function () {},  // onProgress function\n        //       function ( error ) { console.log( error ) } // onError function\n        //   );\n    \n\n        // var geometry = new THREE.SphereGeometry( 1, 32, 32 );\n        // var material = new THREE.MeshBasicMaterial( {color: 0xffffff} );\n        // var test = new THREE.Mesh( geometry, material );\n        // scene.add( test );\n\n        function onMouseMove( event ) {\n        // calculate mouse position in normalized device coordinates\n        // (-1 to +1) for both components\n        const el = document.getElementById(\"three-map\").getBoundingClientRect()\n        const left = el.left;\n        const top = el.top;\n        mouse.x = ( (event.clientX-left) / host.clientWidth ) * 2 - 1;\n        mouse.y = - ( (event.clientY - top) / host.clientHeight ) * 2 + 1;\n\n        raycaster.setFromCamera( mouse, camera );\n\n        // See if the ray from the camera into the world hits one of our meshes\n        var intersects = raycaster.intersectObject( plane );\n\n        // Toggle rotation bool for meshes that we clicked\n        if ( intersects.length > 0 ) {\n\n          pointer.position.set( 0, 0, 0 );\n          pointer.lookAt( intersects[ 0 ].face.normal );\n\n          pointer.position.copy( intersects[ 0 ].point );\n          const posX = Math.sqrt(Math.pow(-50 - -50,2) + Math.pow( pointer.position.x - -50,2) ) / 100;\n          const posY = Math.sqrt(Math.pow(-50 - -50,2) + Math.pow( -50 - pointer.position.y,2) ) / 100;\n          const posZ = Math.sqrt(Math.pow(0 - 0,2) + Math.pow( 0 - pointer.position.z,2) );\n          showCoords(posX,posY,posZ);\n          window.array = window.array || \"\";\n          window.array += `${pointer.position.x.toFixed(4)},${pointer.position.y.toFixed(4)},${pointer.position.z.toFixed(4)}\\n`\n        }\n\n\n      }\n      function onWindowResize() {\n        camera.aspect = host.clientWidth / host.clientHeight;\n        camera.updateProjectionMatrix();\n        // camera2.updateProjectionMatrix();\n        renderer.setSize( host.clientWidth, host.clientHeight );\n      }\n\n      function animate() {\n        // setTimeout( function() {\n        requestAnimationFrame( animate );\n        // }, 1000 / 60 );\n        controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        // controls2.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        render();\n      }\n\n      function render() {\n        var delta = clock.getDelta();\n\n        for ( var i = 0; i < window.mergin_mode.mixers.length; ++ i ) {\n\n          window.mergin_mode.mixers[ i ].update( delta );\n\n        }\n        window.mergin_mode.modelLayer.map(md => {\n          const model = {...md,mesh:md.mesh.children[0]};\n          const {x,y,z} = model.mesh.position;\n          const {animating,activeRow} = model.runtimeInfo;\n          const activeRowData = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow];\n          const xStart = activeRowData[0];\n          const yStart = activeRowData[1];\n          const zStart = activeRowData[2];\n          const Gab = activeRowData[3];\n          const Sab = activeRowData[4];\n          if(\n            animating &&\n            typeof x !== \"undefined\" &&\n            typeof y !== \"undefined\" &&\n            typeof z !== \"undefined\"\n            ) {\n            const dem =window.mergin_mode.plane.dem;\n            const {x:newX,y:newY,z:newZ} = CalculateDeltaPosition(Number(x.toFixed(4)),Number(y.toFixed(4)),Number(z.toFixed(4)),Gab,delta,dem);\n            let newSab = calculateSab(xStart,yStart,x,y);\n            if(newSab === Infinity){\n              newSab = 0\n            }\n            if(newSab < Sab){\n              model.mesh.position.set(newX,newY,newZ);\n            } else {\n              const newActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][activeRow + 1];\n              if(!newActiveRow) {\n                  const startActiveRow = window.mergin_mode.vectors.data.filter(v=>v.id == model.vectorId)[0].array[0][0];\n\n                  // model.mesh.position.set(startActiveRow[0],startActiveRow[1],startActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:false,activeRow:0})\n              } else {\n                  // model.mesh.position.set(newActiveRow[0],newActiveRow[1],newActiveRow[2]);\n                  setModelRuntimeInfo(model.id,{animating:true,activeRow:activeRow + 1})\n                  // model.mesh.rotation.set(model.mesh.rotation.x,model.mesh.rotation.y,newActiveRow[3]/63.6619772367581)\n                  // model.mesh.rotation.y = (-newActiveRow[3] + 200)/63.6619772367581\n                  // const axisX = new Vector3(1, 0, 0);\n                  // const axisY = new Vector3(0, 1, 0);\n                  const axisZ = new THREE.Vector3(0, 0, 1);\n                  // mesh.rotateOnWorldAxis(axisX, rot.x);\n                  // mesh.rotateOnWorldAxis(axisY, rot.y);\n                  model.mesh.rotateOnWorldAxis(axisZ, - (400 - activeRowData[3] + newActiveRow[3])/63.6619772367581);\n              }\n            }\n            // console.log(model.mesh.position)\n            \n          }\n        })\n        renderer.render( scene, camera );\n        // renderer2.render( AxesScene, camera2 );\n      }\n\n      animate();\n       \n      window.addEventListener( 'resize', onWindowResize, false );\n      // document.getElementById(\"three-map\").addEventListener( 'click', onMouseMove, false );\n\n      partials = {plane,pointer,sky,gridHelper};\n      return {camera,controls,scene,renderer,pointer,partials,loaders,onWindowResize}\n} ","import {ThemeliodesProblima_1} from \"./ThemeliodiProblimata\";\nimport {posZ} from \"./computeZ\";\n\nexport const CalculateDeltaPosition = (Xa,Ya,Za,Gab,delta,dem) => {\n\tconst Sab = delta*1.75; //distance in meters per second (50km/h)\n\tlet posXY = ThemeliodesProblima_1(Xa,Ya,Sab,Gab);\n\tconst newZ =posZ(posXY.Xb,posXY.Yb,dem);\n \t// const DZ = posZ(posXY.Xb,posXY.Yb,dem)-Za;\n\t// const DZ = 0;\n\t// if(DZ<0 || DZ >0) {\n\t// \tconst slope = DZ/Sab;\n\t// \tconst slopeRadians = Math.atan(slope);\n\t// \tconst SabNew = Math.abs(Sab*Math.cos(slopeRadians));\n\t// \tposXY = ThemeliodesProblima_1(Xa,Ya,SabNew,Gab);\n\t// }\n\n\t// const PxPosition = UserCoordinatesXY(posXY.Xb,posXY.Yb);\n\t\n\treturn {x:posXY.Xb , y:posXY.Yb , z:newZ};\n}\n\nexport const CalculateDeltaRotation = (Xa,Ya,Za,Xb,Yb,Zb,Gab,Sab,rotX,rotY) => {\n\tvar DZ = Zb-Za;\n\tvar XYkathetis = ThemeliodesProblima_1(Xb,Yb,Sab,Gab+100);\n\tvar Xkathetis =XYkathetis.Xb;\n\tvar Ykathetis =XYkathetis.Yb;\n\tvar Zkathetis = posZ(Xkathetis,Ykathetis);\n\tvar DZkathetis = Zb-Zkathetis;\n\t\n\tvar RotationX = 0;\n\tvar RotationY =0;\n\t\n\tif(DZ<0 || DZ >0){\n\t\tRotationX = Math.atan(DZ/Sab) ;\n\t\tRotationY = Math.atan(DZkathetis/Sab) ;\n\t}\n\n\tvar DRotationX=rotX-RotationX;\n\tvar DRotationY=rotY-RotationY;\n\t\n\treturn {\n\t\tx:Number(DRotationX),\n\t\ty:Number(DRotationY)\n\t};\n}\n","import React, { useRef,useState,useEffect } from 'react';\nimport './App.css';\nimport Webcam from \"react-webcam\";\nimport createWorld from \"./helpers/createWorld.js\";\nwindow.mergin_mode = {\n  modelLayer: [],\n  vectors:[],\n  plane:{},\n  sky:{},\n  mixers:[]\n}\nfunction App() {\n  const webcamRef = useRef(null);\n  const [cameraSettings,setCameraSettings] = useState({width:1920,height:1080,aspectRatio:1920/1080});\n  const videoConstraints = {\n    facingMode: \"environment\"\n  };\n  const [elements, setElements] = useState({\n    mixers:[], camera:{}, controls:{}, scene:{}, renderer:{},pointer:{}, partials:{},loaders:{},onWindowResize:()=>{}\n  })\n  useEffect(()=>{\n   \n    navigator.mediaDevices.getUserMedia({video: true}).then(response=>{\n      const settings = response.getTracks()[0].getSettings()\n      setCameraSettings({...settings});\n      window.addEventListener('resize',()=> {\n        const windowAspectRatio = window.innerWidth/window.innerHeight;        \n        if( windowAspectRatio < settings.aspectRatio ){\n            setCameraSettings({\n              ...cameraSettings,\n              width:window.innerWidth,\n              height:window.innerWidth/settings.width * settings.height\n            })\n        }else {\n            setCameraSettings({\n              ...cameraSettings,\n              height:window.innerHeight,\n              width:window.innerHeight/settings.height * settings.width\n            })\n        }\n      });\n      window.dispatchEvent( new Event('resize') );\n      let {mixers,camera,controls,scene,renderer,pointer,partials,loaders} = elements;\n      const rendererContainer = document.getElementById(\"three-map\");\n      const newWorld = createWorld(camera,controls,scene,renderer,pointer,partials,loaders,rendererContainer,mixers);\n    });\n\n  },[])\n\n\n  return (\n    <div className=\"App\">\n\t\t\t<div style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      }}>\n        <Webcam \n          height={cameraSettings.height}\n          width={cameraSettings.width}\n          ref={webcamRef}\n          videoConstraints={videoConstraints}\n          style={{ zIndex:-1}}\n        />\n        <div id=\"three-map\" style={{\n          position:\"absolute\",\n          width:`${cameraSettings.width}px`,\n          height:`${cameraSettings.height}px`\n        }}></div>   \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}