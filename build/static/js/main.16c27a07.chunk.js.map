{"version":3,"sources":["helpers/createWorld.js","layout/ActionButton.js","layout/Modal.js","helpers/loaders.js","testFiles/worldOne.js","App.js","serviceWorker.js","index.js"],"names":["Math","PI","createWorld","camera","controls","scene","renderer","pointer","partials","loaders","rendererContainer","mixer","selectModel","FBXLoader","GLTFLoader","THREE","host","document","getElementById","video","getElementsByTagName","texture","minFilter","magFilter","format","background","antialias","alpha","setPixelRatio","window","devicePixelRatio","setClearColor","setSize","clientWidth","clientHeight","appendChild","domElement","position","set","DeviceOrientationControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","rotateSpeed","panSpeed","zoomSpeed","geometry","g","pos","getAttribute","pa","array","j","i","length","needsUpdate","computeVertexNormals","generateTerrain","material","wireframe","color","side","flatShading","plane","castShadow","receiveShadow","rotateX","add","gridHelper","light","hemiLight","setHSL","groundColor","dirLight","multiplyScalar","name","sky","opacity","transparent","alphaTest","rotation","raycaster","mouse","onMouseClick","event","mergin_mode","selected","object","traverse","child","isMesh","uuid","x","clientX","changedTouches","innerWidth","y","clientY","innerHeight","setFromCamera","obj","getParentElement","world","map","id","indexOf","parent","intersectObjects","children","onWindowResize","aspect","updateProjectionMatrix","animate","setTimeout","requestAnimationFrame","visible","update","render","addEventListener","prototype","load2","files","callback","scope","this","file","reader","FileReader","onload","target","readyState","status","parse","result","responseText","readAsArrayBuffer","props","classes","makeStyles","theme","root","pointerEvents","height","transform","flexGrow","zIndex","width","speedDial","bottom","spacing","right","useStyles","React","useState","open","setOpen","handleClose","className","Backdrop","SpeedDial","ariaLabel","icon","SpeedDialIcon","onClose","onOpen","actions","action","SpeedDialAction","key","tooltipTitle","tooltipOpen","onClick","rand","round","random","getModalStyle","top","left","maxWidth","paper","backgroundColor","palette","border","boxShadow","shadows","padding","modalStyle","body","style","data","Modal","aria-labelledby","aria-describedby","loadGLTFModel","location","url","size","loader","dracoLoader","DRACOLoader","setDRACOLoader","Promise","resolve","reject","load","gltf","loadFBXModel","a","fromLonLat","towerlocation","treelocation","model1","model2","console","log","description","createMuiTheme","primary","main","secondary","modelLayer","vectors","mixers","App","latitude","longitude","setPosition","setAction","modalData","setModalData","mainRef","useRef","appRef","useEffect","navigator","geolocation","getCurrentPosition","mediaDevices","getUserMedia","coords","current","facingMode","then","response","srcObject","play","newWorld","filter","o","check","display","ThemeProvider","ref","elem","src","autoPlay","playsInline","ActionButton","fullscreenElement","exitFullscreen","requestFullscreen","catch","err","message","delay","onError","error","onScan","d","JSON","z","alphaOffset","heading","Boolean","hostname","match","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16c27a07.chunk.js","sourcesContent":["import * as THREE from \"three\";\n// import { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { DeviceOrientationControls } from \"three/examples/jsm/controls/DeviceOrientationControls.js\";\nimport { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader.js\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport { CalculateDeltaPosition } from \"./CalculateDeltaPosition\";\nimport { calculateSab } from \"./ThemeliodiProblimata\";\n// var modelName = \"models/gltf/\" + model.name + \".glb\";\nconst degtorad = Math.PI / 180; // Degree-to-Radian conversion\n\nGLTFLoader.prototype.load2 = function(files, callback) {\n  const scope = this;\n  const file = files[0];\n\n  const reader = new FileReader();\n\n  reader.onload = function(event) {\n    if (event.target.readyState === 2 || event.target.status === 0) {\n      scope.parse(\n        event.target.result || event.target.responseText,\n        \"\",\n        callback\n      );\n    } else {\n    }\n  };\n  reader.readAsArrayBuffer(file);\n};\nFBXLoader.prototype.load2 = function(files, callback) {\n  const scope = this;\n  const file = files[0];\n\n  const reader = new FileReader();\n\n  reader.onload = function(event) {\n    if (event.target.readyState === 2 || event.target.status === 0) {\n      const geometry = scope.parse(\n        event.target.result || event.target.responseText\n      );\n\n      if (callback) callback(geometry);\n    } else {\n      // scope.dispatchEvent({type: 'error', message: 'Couldn\\'t load URL [' + url + ']', response: event.target.readyState});\n    }\n  };\n\n  reader.readAsArrayBuffer(file);\n};\n\nexport default function createWorld(\n  camera,\n  controls,\n  scene,\n  renderer,\n  pointer,\n  partials,\n  loaders,\n  rendererContainer,\n  mixer,\n  selectModel\n) {\n  loaders.FBXLoader = FBXLoader;\n  loaders.GLTFLoader = GLTFLoader;\n  const clock = new THREE.Clock();\n\n  const host = document.getElementById(\"three-map\");\n\n  const generateTerrain = (g /*,m, e*/) => {\n    const pos = g.getAttribute(\"position\");\n    const pa = pos.array;\n\n    for (let j = 2, i = 0; j < pa.length; j += 3, i++) {\n      pa[j] = 0;\n    }\n    pos.needsUpdate = true;\n    g.computeVertexNormals();\n  };\n\n  scene = new THREE.Scene();\n\n  const video = document.getElementsByTagName(\"video\")[0];\n  const texture = new THREE.VideoTexture(video);\n  texture.minFilter = THREE.LinearFilter;\n  texture.magFilter = THREE.LinearFilter;\n  texture.format = THREE.RGBFormat;\n  scene.background = texture;\n  renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setClearColor(0x000000, 0);\n  renderer.setSize(host.clientWidth, host.clientHeight);\n\n  host.appendChild(renderer.domElement);\n  camera = new THREE.PerspectiveCamera(\n    60,\n    host.clientWidth / host.clientHeight,\n    1,\n    10000\n  );\n  // camera = new THREE.OrthographicCamera( host.clientWidth / - 2, host.clientWidth / 2, host.clientHeight / 2, host.clientHeight / - 2, 1, 1000 );\n  camera.position.set(50, 17, 50);\n\n  // controls = new OrbitControls(camera, renderer.domElement);\n  controls = new DeviceOrientationControls(camera);\n  controls.enableDamping = true; // an animation loop is required when either damping or auto-rotation are enabled\n  controls.dampingFactor = 0.05;\n  controls.screenSpacePanning = false;\n  controls.minDistance = 1;\n  controls.maxDistance = 1000;\n  // controls.maxPolarAngle = Math.PI / 2;\n  controls.rotateSpeed = 0.8;\n  controls.panSpeed = 0.8;\n  controls.zoomSpeed = 0.8;\n\n  // world\n  const geometry = new THREE.PlaneBufferGeometry(100, 100, 99, 99);\n\n  generateTerrain(geometry);\n\n  const material = new THREE.MeshPhongMaterial({\n    wireframe: true,\n    color: \"#222\",\n    side: THREE.DoubleSide\n  });\n\n  material.flatShading = true;\n\n  const plane = new THREE.Mesh(geometry, material);\n  plane.position.set(0, 0, 0);\n\n  plane.castShadow = false;\n  plane.receiveShadow = false;\n  plane.geometry.rotateX(Math.PI / 2);\n\n  scene.add(plane);\n\n  const gridHelper = new THREE.GridHelper(10000, 1000);\n  scene.add(gridHelper);\n  const light = new THREE.AmbientLight(0x404040, 1); // soft white light\n  scene.add(light);\n\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 1);\n  hemiLight.color.setHSL(0.6, 0.5, 0.75);\n  hemiLight.groundColor.setHSL(0.095, 0.5, 0.5);\n  hemiLight.position.set(0, 0, 50);\n  scene.add(hemiLight);\n\n  const dirLight = new THREE.DirectionalLight(0xffffff, 1);\n  window.dirLight = dirLight;\n  dirLight.position.set(1, -1, 1);\n  dirLight.position.multiplyScalar(50);\n  dirLight.name = \"dirlight\";\n  // dirLight.shadowCameraVisible = true;\n\n  scene.add(dirLight);\n\n  dirLight.castShadow = false;\n\n  pointer = new THREE.Mesh(\n    new THREE.SphereGeometry(0.5, 32, 32),\n    new THREE.MeshBasicMaterial({ color: \"red\" })\n  );\n\n  const sky = new THREE.Mesh(\n    new THREE.SphereGeometry(150, 32, 32),\n    new THREE.MeshBasicMaterial({\n      opacity: 0,\n      transparent: true,\n      alphaTest: 0.05,\n      side: THREE.DoubleSide\n    })\n  );\n  sky.rotation.set(Math.PI / 2, 0, 0);\n  scene.add(sky);\n\n  const raycaster = new THREE.Raycaster();\n  const mouse = new THREE.Vector2();\n  const getParentElement = object => {\n    if (!object || !window.mergin_mode.world) {\n      return false;\n    }\n    const allIds = window.mergin_mode.world.map(obj => obj.id);\n    if (allIds.indexOf(object.uuid) !== -1) {\n      return object;\n    }\n    return getParentElement(object.parent);\n  };\n  function onMouseClick(event) {\n    if (window.mergin_mode.selected.object) {\n      window.mergin_mode.selected.object.traverse(child => {\n        if (child.isMesh) {\n          child.material = window.mergin_mode.selected.material[child.uuid];\n        }\n      });\n      window.mergin_mode.selected.object = null;\n      window.mergin_mode.selected.material = null;\n    }\n    mouse.x =\n      ((event.clientX || event.changedTouches[0].clientX) / window.innerWidth) *\n        2 -\n      1;\n    mouse.y =\n      -(\n        (event.clientY || event.changedTouches[0].clientY) / window.innerHeight\n      ) *\n        2 +\n      1;\n    raycaster.setFromCamera(mouse, camera);\n\n    const intersects = raycaster.intersectObjects(scene.children, true);\n    const obj = getParentElement((intersects || [])[0]?.object);\n    if (!obj) return false;\n    const material = new THREE.MeshPhongMaterial({\n      color: \"#b34f0b\",\n      side: THREE.DoubleSide\n    });\n\n    window.mergin_mode.selected.object = obj;\n    window.mergin_mode.selected.material = {};\n    obj.traverse(child => {\n      if (child.isMesh) {\n        window.mergin_mode.selected.material[child.uuid] = child.material;\n        child.material = material;\n      }\n    });\n    selectModel(obj.uuid);\n  }\n\n  function onWindowResize() {\n    camera.aspect = host.clientWidth / host.clientHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(host.clientWidth, host.clientHeight);\n  }\n\n  function animate() {\n    setTimeout(function() {\n      requestAnimationFrame(animate);\n      if (window.mergin_mode.scene?.visible !== false) {\n        controls.update(); // only required if controls.enableDamping = true, or if controls.autoRotate = true\n        render();\n      }\n    }, 60);\n  }\n  animate();\n\n  function render() {\n    renderer.render(scene, camera);\n  }\n\n  window.addEventListener(\"resize\", onWindowResize, false);\n  document\n    .getElementById(\"three-map\")\n    .addEventListener(\"click\", onMouseClick, false);\n  document\n    .getElementById(\"three-map\")\n    .addEventListener(\"touchend\", onMouseClick, false);\n\n  partials = { plane, pointer, sky, gridHelper };\n  return {\n    plane,\n    camera,\n    controls,\n    scene,\n    renderer,\n    pointer,\n    partials,\n    loaders,\n    onWindowResize\n  };\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\n\nexport default props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      pointerEvents: \"none\",\n      height: 380,\n      transform: \"translateZ(0px)\",\n      flexGrow: 1,\n      position: \"absolute\",\n      zIndex: 10,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    speedDial: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2)\n    }\n  }));\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Backdrop open={open} />\n      <SpeedDial\n        ariaLabel=\"Action Tooltip\"\n        className={classes.speedDial}\n        icon={<SpeedDialIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n      >\n        {props.actions.map(action => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            tooltipOpen\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    maxWidth: \"50%\",\n    width: \"50%\",\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nexport default props => {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <p id=\"simple-modal-description\">{props.data}</p>\n    </div>\n  );\n\n  return (\n    <Modal\n      open={true}\n      onClose={props.onClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      {body}\n    </Modal>\n  );\n};\n","import { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader.js\";\nexport const loadGLTFModel = (file, location) => {\n  const { name, size, url } = file[0];\n  const { scene, loaders } = window.mergin_mode;\n\n  const loader = new loaders.GLTFLoader();\n  const dracoLoader = new DRACOLoader();\n  loader.setDRACOLoader(dracoLoader);\n  return new Promise((resolve, reject) => {\n    loader.load(url, gltf => {\n      gltf.scene.position.set(...location);\n      scene.add(gltf.scene);\n      resolve(gltf.scene.uuid);\n    });\n  });\n};\nexport const loadFBXModel = (file, location) => {\n  const { name, size, url } = file[0];\n  const { scene, loaders } = window.mergin_mode;\n  const loader = new loaders.FBXLoader();\n  return new Promise((resolve, reject) => {\n    loader.load(url, object => {\n      object.traverse(child => {\n        if (child.isMesh) {\n          child.castShadow = true;\n          child.receiveShadow = true;\n        }\n      });\n      object.position.set(...location);\n      scene.add(object);\n      resolve(object.uuid);\n    });\n  });\n};\n","import { fromLonLat } from \"ol/proj.js\";\nimport { loadGLTFModel, loadFBXModel } from \"../helpers/loaders\";\nexport default async () => {\n  const towerlocationConvert = fromLonLat([40.626374, 22.948324, 15.25]);\n  const treelocationConvert = fromLonLat([40.62626, 22.947929, 15.25]);\n  const userConvert = fromLonLat([40.626288, 22.947957, 15.25]);\n  // const towerlocation = [\n  //   towerlocationConvert[0],\n  //   towerlocationConvert[2],\n  //   towerlocationConvert[1]\n  // ];\n  // const treelocation = [\n  //   treelocationConvert[0],\n  //   treelocationConvert[2],\n  //   treelocationConvert[1]\n  // ];\n  const towerlocation = [0, 0, 0];\n  const treelocation = [0, 0, 20];\n  const model1 = await loadFBXModel(\n    [{ url: process.env.PUBLIC_URL + \"/tree-green.fbx\" }],\n    treelocation\n  );\n  const model2 = await loadGLTFModel(\n    [{ url: process.env.PUBLIC_URL + \"/white-tower.gltf\" }],\n    towerlocation\n  );\n  console.log(model1, model2);\n  window.mergin_mode.world = [\n    { id: model1, description: \"This is the model 1\" },\n    { id: model2, description: \"This is the model 2\" }\n  ];\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport createWorld from \"./helpers/createWorld.js\";\nimport QrReader from \"react-qr-reader\";\nimport ActionButton from \"./layout/ActionButton\";\nimport Modal from \"./layout/Modal\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport FileCopyIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nimport PrintIcon from \"@material-ui/icons/Print\";\n\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport StreetviewIcon from \"@material-ui/icons/Streetview\";\n\nimport world from \"./testFiles/worldOne\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#b34f0b\"\n    },\n    secondary: {\n      main: \"#323228\"\n    }\n  }\n});\n\nwindow.mergin_mode = {\n  modelLayer: [],\n  vectors: [],\n  plane: {},\n  sky: {},\n  mixers: [],\n  camera: {},\n  controls: {},\n  scene: {},\n  renderer: {},\n  pointer: {},\n  partials: {},\n  loaders: {},\n  selected: {\n    object: null,\n    material: null\n  },\n  onWindowResize: () => {}\n};\n\nfunction App() {\n  const [position, setPosition] = useState({ latitude: 0, longitude: 0 });\n  const [action, setAction] = useState(\"immerse\");\n  const [modalData, setModalData] = useState(null);\n  const mainRef = useRef(null);\n  const appRef = useRef(null);\n  const pos = useRef(position);\n  const qrScanner = useRef({});\n  const handleScan = data => {\n    if (data) {\n      const d = JSON.parse(data);\n      window.mergin_mode.camera.position.set(d.x, d.y, d.z);\n      setAction(\"immerse\");\n      window.mergin_mode.controls.alphaOffset = (d.heading / 180) * Math.PI;\n      window.mergin_mode.controls.update();\n    }\n  };\n\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      appRef.current.requestFullscreen().catch(err => {\n        modalData(\n          `Error attempting to enable full-screen mode: ${err.message} (${err.name})`\n        );\n      });\n    } else {\n      document.exitFullscreen();\n    }\n  };\n  const handleScanError = err => {\n    console.error(err);\n  };\n\n  useEffect(() => {\n    if (\n      !navigator.geolocation?.getCurrentPosition ||\n      !navigator.mediaDevices?.getUserMedia\n    ) {\n      return false;\n    }\n    const constraints = {\n      video: { width: 1280, height: 720, facingMode: \"environment\" }\n    };\n\n    navigator.geolocation.getCurrentPosition(\n      function success(position) {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        pos.current = { latitude, longitude };\n        setPosition(pos.current);\n      },\n      () => {}\n    );\n\n    navigator.mediaDevices.getUserMedia(constraints).then(response => {\n      const video = document.getElementById(\"video\");\n      video.srcObject = response;\n      video.play();\n    });\n\n    const {\n      mixers,\n      camera,\n      controls,\n      scene,\n      renderer,\n      pointer,\n      partials,\n      loaders\n    } = window.mergin_mode;\n    const rendererContainer = document.getElementById(\"three-map\");\n    const newWorld = createWorld(\n      camera,\n      controls,\n      scene,\n      renderer,\n      pointer,\n      partials,\n      loaders,\n      rendererContainer,\n      mixers,\n      uuid =>\n        setModalData(\n          window.mergin_mode.world.filter(o => o.id == uuid)[0].description\n        )\n    );\n    window.mergin_mode = { ...window.mergin_mode, ...newWorld };\n    world();\n  }, []);\n\n  useEffect(() => {\n    const check = action === \"immerse\";\n    window.mergin_mode.scene.visible = check;\n    window.mergin_mode.scene.needsUpdate = true;\n    mainRef.current.style.display = check ? \"block\" : \"none\";\n  }, [action]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\" ref={elem => (appRef.current = elem)}>\n        <div id=\"main\" ref={elem => (mainRef.current = elem)}>\n          <img\n            id=\"logo\"\n            width={120}\n            height={(120 * 469) / 640}\n            src={process.env.PUBLIC_URL + \"/logo-transparent.png\"}\n          />\n          <video\n            id=\"video\"\n            style={{ display: \"none\" }}\n            autoPlay\n            playsInline\n          ></video>\n          <div\n            id=\"three-map\"\n            style={{\n              position: \"absolute\",\n              width: `100%`,\n              height: `100%`\n            }}\n          ></div>\n        </div>\n        <ActionButton\n          actions={[\n            {\n              icon: (\n                <StreetviewIcon\n                  color=\"secondary\"\n                  onClick={() => setAction(\"immerse\")}\n                />\n              ),\n              name: \"Immerse\"\n            },\n            {\n              icon: (\n                <CropFreeIcon\n                  color=\"secondary\"\n                  onClick={() => setAction(\"scan\")}\n                />\n              ),\n              name: \"QR Scan\"\n            },\n            {\n              icon: (\n                <FullscreenIcon\n                  color=\"secondary\"\n                  onClick={() => toggleFullscreen()}\n                />\n              ),\n              name: \"Full Screen\"\n            }\n          ]}\n        />\n        {action === \"scan\" && (\n          <div className=\"scan-tip\">\n            <QrReader\n              delay={300}\n              onError={handleScanError}\n              onScan={handleScan}\n              style={{ width: \"100%\" }}\n            />\n          </div>\n        )}\n        {modalData && (\n          <Modal\n            data={modalData}\n            onClose={() => {\n              setModalData(null);\n              setAction(\"immerse\");\n            }}\n          />\n        )}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}